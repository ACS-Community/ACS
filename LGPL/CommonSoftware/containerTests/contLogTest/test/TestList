#*******************************************************************************
# ALMA - Atacama Large Millimiter Array
# (c) European Southern Observatory, 2002
# Copyright by ESO (in the framework of the ALMA collaboration)
# and Cosylab 2002, All rights reserved
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
# MA 02111-1307  USA
#
# "@(#) $Id: TestList,v 1.12 2008/01/30 11:05:10 eallaert Exp $"
#
# TestList
#
# who       when        what
# --------  ----------  ----------------------------------------------
# eallaert  2007-11-02  Initial version
# agrimstr  2007-11-14  Added tests for Python
# eallaert  2007-12-13  Added several test (without CDB file, etc)
#

# NOTE: if running individual tests (e.g. "tat -v -nc 1 3 ..."), the following
# SOURCE and PROLOGUE directives are not taken into account. In this case,
# give the command "export ACS_CDB=`pwd`" from this directory, and then
# start up ACS "by hand".
SOURCE setupTatEnvironment.tcl
PROLOGUE acsutilTATPrologue -l

########################################################
# JAVA-CONTAINER WITHOUT CDB FILE
########################################################
# Note that if minLogLevel is set to OFF/99, logs at level EMERGENCY/11 still
# get through (bug).
1 SOURCE prepareHardcodedLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java myDefaultJavaTestContainer" \
	javaHardcodedLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG1" 
# Execute always together with previous test - it assumes proper container is already/still up        
2   PROLOGUE "acsutilAwaitContainerStart -java myDefaultJavaTestContainer" \
	javaHardcodedLevelsNoCdb2 "maciContainerLogLevel myDefaultJavaTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultJavaTestContainer"


# As there is no CDB file for this container, we must skip the test for the container
# default log-levels as set in the CDB. 

# NOTE1: acsutilAwaitContainerStart will look for particular messages to stdout
#   sent by the Container; if we would set here within prepareEnvLevels.tcl the
#   env var ACS_LOG_STDOUT to a high value, these msgs to stdout are not
#   produced, so acsutilAwaitContainerStart would time out.
#   Workaround: use high levels in xml file, lower ones in env vars
# NOTE2: similar for acsStopContainer.
# NOTE3: the file $ACSROOT/bin/acsstartupConstants.sh sets the "script debugging
#   var ACS_DEBUG_PRIORITY to 4, and acsStartJava will send extra debug messages
#   to stdout if ACS_LOG_STDOUT exists and is less than ACS_DEBUG_PRIORITY.
#   Be aware that this magic level 4 impacts the reference file more than just
#   that number ...
5 SOURCE prepareEnvLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java myDefaultJavaTestContainer" \
	javaEnvironmentLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG1"
# Execute always together with previous test - it assumes proper container is already/still up        
6	javaEnvironmentLevelsNoCdb2 "maciContainerLogLevel myDefaultJavaTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultJavaTestContainer"


7 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java myDefaultJavaTestContainer" \
	javaDynamicLevelsNoCdb "maciContainerLogLevel myDefaultJavaTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG1"
# Execute always together with previous test - it assumes proper container is already/still up        
8	javaDynamicLevelsNoCdb2 "maciContainerLogLevel myDefaultJavaTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultJavaTestContainer get default" \
	EPILOGUE "acsStopContainer myDefaultJavaTestContainer"

# Same as test 7/8, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
9 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java myDefaultJavaTestContainer" \
	javaDynamicLevelsUnknownLoggerNoCdb "maciContainerLogLevel myDefaultJavaTestContainer set TESTLOG1 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG1"
# Execute always together with previous test - it assumes proper container is already/still up        
10	javaDynamicLevelsUnknownLoggerNoCdb2 "maciContainerLogLevel myDefaultJavaTestContainer set TESTLOG1 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultJavaTestContainer get TESTLOG1" \
        EPILOGUE "acsStopContainer myDefaultJavaTestContainer"

########################################################
# JAVA-CONTAINER WITH CDB FILE, NO NAMED LOGGERS
########################################################
11 SOURCE prepareHardcodedLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaHardcodedLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2" 
# Execute always together with previous test - it assumes proper container is already/still up        
12	javaHardcodedLevels2 "maciContainerLogLevel frodoContainer get default" \
    EPILOGUE "acsStopContainer frodoContainer"


13 SOURCE prepareCdbLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaCdbLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2"
# Execute always together with previous test - it assumes proper container is already/still up        
14	javaCdbLevels2 "maciContainerLogLevel frodoContainer get default" \
    EPILOGUE "acsStopContainer frodoContainer"

# NOTE1: acsutilAwaitContainerStart will look for particular messages to stdout
#   sent by the Container; if we would set here within prepareEnvLevels.tcl the
#   env var ACS_LOG_STDOUT to a high value, these msgs to stdout are not
#   produced, so acsutilAwaitContainerStart would time out.
#   Workaround: use high levels in xml file, lower ones in env vars
# NOTE2: similar for acsStopContainer.
# NOTE3: the file $ACSROOT/bin/acsstartupConstants.sh sets the "script debugging
#   var ACS_DEBUG_PRIORITY to 4, and acsStartJava will send extra debug messages
#   to stdout if ACS_LOG_STDOUT exists and is less than ACS_DEBUG_PRIORITY.
#   Be aware that this magic level 4 impacts the reference file more than just
#   that number ...
15 SOURCE prepareEnvLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaEnvironmentLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2" 
# Execute always together with previous test - it assumes proper container is already/still up        
16	javaEnvironmentLevels2 "maciContainerLogLevel frodoContainer get default" \
    EPILOGUE "acsStopContainer frodoContainer"


17 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaDynamicLevels "maciContainerLogLevel frodoContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2"
# Execute always together with previous test - it assumes proper container is already/still up        
18	javaDynamicLevels2 "maciContainerLogLevel frodoContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel frodoContainer get default" \
    EPILOGUE "acsStopContainer frodoContainer"


# Same as test 17/18, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
19 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaDynamicLevelsUnknownLogger "maciContainerLogLevel frodoContainer set TESTLOG2 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2" 
# Execute always together with previous test - it assumes proper container is already/still up        
20	javaDynamicLevelsUnknownLogger2 "maciContainerLogLevel frodoContainer set TESTLOG1 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel frodoContainer get TESTLOG1" \
    EPILOGUE "acsStopContainer frodoContainer"

########################################################
# JAVA-CONTAINER WITH CDB FILE AND NAMED LOGGERS
########################################################
21 SOURCE prepareHardcodedLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaHardcodedLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2" 
# Execute always together with previous test - it assumes proper container is already/still up        
22	javaHardcodedLevelsNamedLogger2 "maciContainerLogLevel frodoContainer get TESTLOG2" \
    EPILOGUE "acsStopContainer frodoContainer"


23 SOURCE prepareCdbLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaCdbLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2"
# Execute always together with previous test - it assumes proper container is already/still up        
24	javaCdbLevelsNamedLogger2 "maciContainerLogLevel frodoContainer get TESTLOG2" \
    EPILOGUE "acsStopContainer frodoContainer"


# NOTE1: acsutilAwaitContainerStart will look for particular messages to stdout
#   sent by the Container; if we would set here within prepareEnvLevels.tcl the
#   env var ACS_LOG_STDOUT to a high value, these msgs to stdout are not
#   produced, so acsutilAwaitContainerStart would time out.
#   Workaround: use high levels in xml file, lower ones in env vars
# NOTE2: similar for acsStopContainer.
# NOTE3: the file $ACSROOT/bin/acsstartupConstants.sh sets the "script debugging
#   var ACS_DEBUG_PRIORITY to 4, and acsStartJava will send extra debug messages
#   to stdout if ACS_LOG_STDOUT exists and is less than ACS_DEBUG_PRIORITY.
#   Be aware that this magic level 4 impacts the reference file more than just
#   that number ...
25 SOURCE prepareEnvLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaEnvironmentLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2"
# Execute always together with previous test - it assumes proper container is already/still up        
26	javaEnvironmentLevelsNamedLogger2 "maciContainerLogLevel frodoContainer get TESTLOG2" \
    EPILOGUE "acsStopContainer frodoContainer"


27 SOURCE prepareDynLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -java frodoContainer" \
	javaDynamicLevelsNamedLogger "maciContainerLogLevel frodoContainer set TESTLOG2 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG2" 
# Execute always together with previous test - it assumes proper container is already/still up        
28	javaDynamicLevelsNamedLogger2 "maciContainerLogLevel frodoContainer set TESTLOG2 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel frodoContainer get TESTLOG2" \
    EPILOGUE "acsStopContainer frodoContainer"

########################################################
# CPP-CONTAINER WITHOUT CDB FILE
########################################################
# 31,35,37,39 will need a new ref-file as soon as sending logs at level 99 is causing exception. 
31 SOURCE prepareHardcodedLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp myDefaultCppTestContainer" \
	cppHardcodedLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG3"
# Execute always together with previous test - it assumes proper container is already/still up        
32	cppHardcodedLevelsNoCdb2 "maciContainerLogLevel myDefaultCppTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultCppTestContainer"


# As there is no CDB file for this container, we must skip the test for the container
# default log-levels as set in the CDB. 

35 SOURCE prepareEnvLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp myDefaultCppTestContainer" \
	cppEnvironmentLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG3" 
# Execute always together with previous test - it assumes proper container is already/still up        
36 	cppEnvironmentLevelsNoCdb2 "maciContainerLogLevel myDefaultCppTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultCppTestContainer"


37 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp myDefaultCppTestContainer" \
	cppDynamicLevelsNoCdb "maciContainerLogLevel myDefaultCppTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG3" 
# Execute always together with previous test - it assumes proper container is already/still up        
38	cppDynamicLevelsNoCdb2 "maciContainerLogLevel myDefaultCppTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultCppTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultCppTestContainer"

# Same as test 37/38, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
39 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp myDefaultCppTestContainer" \
	cppDynamicLevelsUnknownLoggerNoCdb "maciContainerLogLevel myDefaultCppTestContainer set TESTLOG3 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG3" 
# Execute always together with previous test - it assumes proper container is already/still up        
40	cppDynamicLevelsUnknownLoggerNoCdb2 "maciContainerLogLevel myDefaultCppTestContainer set TESTLOG3 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultCppTestContainer get TESTLOG3" \
    EPILOGUE "acsStopContainer myDefaultCppTestContainer"

########################################################
# CPP-CONTAINER WITH CDB FILE, NO NAMED LOGGERS
########################################################
# 41, 43, 45, 47, 49 will need a new ref-file as soon as sending logs at level 99 is causing exception. 
41 SOURCE prepareHardcodedLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppHardcodedLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
42	cppHardcodedLevels2 "maciContainerLogLevel bilboContainer get default" \
    EPILOGUE "acsStopContainer bilboContainer"


43 SOURCE prepareCdbLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppCdbLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
44	cppCdbLevels2 "maciContainerLogLevel bilboContainer get default" \
    EPILOGUE "acsStopContainer bilboContainer"


45 SOURCE prepareEnvLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppEnvironmentLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
46	cppEnvironmentLevels2 "maciContainerLogLevel bilboContainer get default" \
    EPILOGUE "acsStopContainer bilboContainer"


47 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppDynamicLevels "maciContainerLogLevel bilboContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
48	cppDynamicLevels2 "maciContainerLogLevel bilboContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel bilboContainer get default" \
    EPILOGUE "acsStopContainer bilboContainer"


# Same as test 47/48, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
49 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppDynamicLevelsUnknownLogger "maciContainerLogLevel bilboContainer set TESTLOG4 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4"
# Execute always together with previous test - it assumes proper container is already/still up        
50	cppDynamicLevelsUnknownLogger2 "maciContainerLogLevel bilboContainer set TESTLOG4 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel bilboContainer get TESTLOG4" \
    EPILOGUE "acsStopContainer bilboContainer"

########################################################
# CPP-CONTAINER WITH CDB FILE AND NAMED LOGGERS
########################################################
# 51, 53, 55, 57 will need a new ref-file as soon as sending logs at level 99 is causing exception. 
51 SOURCE prepareHardcodedLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppHardcodedLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4"
# Execute always together with previous test - it assumes proper container is already/still up        
52	cppHardcodedLevelsNamedLogger2 "maciContainerLogLevel bilboContainer get TESTLOG4" \
    EPILOGUE "acsStopContainer bilboContainer"


53 SOURCE prepareCdbLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppCdbLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4"
# Execute always together with previous test - it assumes proper container is already/still up        
54	cppCdbLevelsNamedLogger2 "maciContainerLogLevel bilboContainer get TESTLOG4" \
    EPILOGUE "acsStopContainer bilboContainer"


55 SOURCE prepareEnvLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppEnvironmentLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
56	cppEnvironmentLevelsNamedLogger2 "maciContainerLogLevel bilboContainer get TESTLOG4" \
    EPILOGUE "acsStopContainer bilboContainer"

57 SOURCE prepareDynLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -cpp bilboContainer" \
	cppDynamicLevelsNamedLogger "maciContainerLogLevel bilboContainer set TESTLOG4 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG4" 
# Execute always together with previous test - it assumes proper container is already/still up        
58	cppDynamicLevelsNamedLogger2 "maciContainerLogLevel bilboContainer set TESTLOG4 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel bilboContainer get TESTLOG4" \
    EPILOGUE "acsStopContainer bilboContainer"

########################################################
# PYTHON-CONTAINER WITHOUT CDB FILE
########################################################
61 SOURCE prepareHardcodedLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py myDefaultPyTestContainer" \
	pyHardcodedLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG5"
# Execute always together with previous test - it assumes proper container is already/still up        
62	pyHardcodedLevelsNoCdb2 "maciContainerLogLevel myDefaultPyTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultPyTestContainer"


# As there is no CDB file for this container, we must skip the test for the container
# default log-levels as set in the CDB. 

65 SOURCE prepareEnvLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py myDefaultPyTestContainer" \
	pyEnvironmentLevelsNoCdb "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG5"
# Execute always together with previous test - it assumes proper container is already/still up        
66	pyEnvironmentLevelsNoCdb2 "maciContainerLogLevel myDefaultPyTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultPyTestContainer"


67 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py myDefaultPyTestContainer" \
	pyDynamicLevelsNoCdb "maciContainerLogLevel myDefaultPyTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG5" 
# Execute always together with previous test - it assumes proper container is already/still up        
68	pyDynamicLevelsNoCdb2 "maciContainerLogLevel myDefaultPyTestContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultPyTestContainer get default" \
    EPILOGUE "acsStopContainer myDefaultPyTestContainer"


# Same as test 67/68, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
69 SOURCE prepareDynLevelsNoCdb.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py myDefaultPyTestContainer" \
	pyDynamicLevelsUnknownLoggerNoCdb "maciContainerLogLevel myDefaultPyTestContainer set TESTLOG5 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG5"
# Execute always together with previous test - it assumes proper container is already/still up        
70	pyDynamicLevelsUnknownLoggerNoCdb2 "maciContainerLogLevel myDefaultPyTestContainer set TESTLOG5 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel myDefaultPyTestContainer get TESTLOG5" \
    EPILOGUE "acsStopContainer myDefaultPyTestContainer"

########################################################
# PYTHON-CONTAINER WITH CDB FILE, NO NAMED LOGGERS
########################################################
71 SOURCE prepareHardcodedLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyHardcodedLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
72	pyHardcodedLevels2 "maciContainerLogLevel aragornContainer get default" \
    EPILOGUE "acsStopContainer aragornContainer"


73 SOURCE prepareCdbLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyCdbLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6" 
# Execute always together with previous test - it assumes proper container is already/still up        
74	pyCdbLevels2 "maciContainerLogLevel aragornContainer get default" \
    EPILOGUE "acsStopContainer aragornContainer"


75 SOURCE prepareEnvLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyEnvironmentLevels "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
# 76 will fail: python gives precedence to CDB defaults above env var settings (bug)
76	pyEnvironmentLevels2 "maciContainerLogLevel aragornContainer get default" \
    EPILOGUE "acsStopContainer aragornContainer"

77 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyDynamicLevels "maciContainerLogLevel aragornContainer set default 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
78	pyDynamicLevels2 "maciContainerLogLevel aragornContainer set default 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel aragornContainer get default" \
    EPILOGUE "acsStopContainer aragornContainer"


# Same as test 77/78, but now setting the levels of a specific logger which is not yet
# defined when this dynamic setting is done.
79 SOURCE prepareDynLevels.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyDynamicLevelsUnknownLogger "maciContainerLogLevel aragornContainer set TESTLOG6 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
80	pyDynamicLevelsUnknownLogger2 "maciContainerLogLevel aragornContainer set TESTLOG6 8 9" \
                      "@SLEEP 2" \
                      "maciContainerLogLevel aragornContainer get TESTLOG6" \
    EPILOGUE "acsStopContainer aragornContainer"

########################################################
# PYTHON-CONTAINER WITH CDB FILE AND NAMED LOGGERS
########################################################
81 SOURCE prepareHardcodedLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyHardcodedLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6" 
# Execute always together with previous test - it assumes proper container is already/still up        
82	pyHardcodedNamedLoggerLevels2 "maciContainerLogLevel aragornContainer get TESTLOG6" \
    EPILOGUE "acsStopContainer aragornContainer"


83 SOURCE prepareCdbLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyCdbLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6" 
# Execute always together with previous test - it assumes proper container is already/still up        
84 	pyCdbNamedLoggerLevels2 "maciContainerLogLevel aragornContainer get TESTLOG6" \
    EPILOGUE "acsStopContainer aragornContainer"


85 SOURCE prepareEnvLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyEnvironmentLevelsNamedLogger "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
86 	pyEnvironmentNamedLoggerLevels2 "maciContainerLogLevel aragornContainer get aragornContainer" \
    EPILOGUE "acsStopContainer aragornContainer"


87 SOURCE prepareDynLevelsNamedLogger.tcl \
	PROLOGUE "acsutilAwaitContainerStart -py aragornContainer" \
	pyDynamicLevelsNamedLogger "maciContainerLogLevel aragornContainer set TESTLOG6 8 9" \
                      "@SLEEP 2" \
                      "acsStartJava alma.contLogTest.TestLogLevelsCompImpl.TestLogLevelsCompTest TESTLOG6"
# Execute always together with previous test - it assumes proper container is already/still up        
# Will fail as python doesn't permit to give settings for not-active logger
88	pyDynamicNamedLoggerLevels2 "maciContainerLogLevel aragornContainer set TESTLOG6 8 9" \
        EPILOGUE "acsStopContainer aragornContainer"

################# finito ##################	
EPILOGUE acsutilTATEpilogue
