#ifndef _XMLENTITY_IDL_
#define _XMLENTITY_IDL_

/*
 *    ALMA - Atacama Large Millimiter Array
 *    (c) European Southern Observatory, 2002
 *    Copyright by ESO (in the framework of the ALMA collaboration),
 *    All rights reserved
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 *    MA 02111-1307  USA
 */
#pragma prefix "alma"

module xmlentity
{
  struct XmlEntityStruct
  {
    wstring xmlString;		// 16 bits chars to support a wide range of symbols (greek, umlauts, etc)
    string entityId;		// unique ID, same as inside the xml, but easier to access
    string entityTypeName;	// unique name like "SchedBlock" (should be the schema name w/o ".xsd")
    string schemaVersion;	// the schema version that the entity complies with
    string timeStamp;		// used to create a primitive form of locking, not to be touched by the client
  };
  	
	
  /*********************************************************
   * usage example:
   * typedef xmlentity::XmlEntityStruct SchedBlock;
   * typedef sequence <SchedBlock> SchedBlockSeq;
   *********************************************************/
};

#endif
