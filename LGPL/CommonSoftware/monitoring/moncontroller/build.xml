<?xml version="1.0" encoding="ISO-8859-1" ?>
<project name="TMCDBArchiver" default="test" basedir=".">
        <!--
     Project: MonitoringArchiveFBT
     file: build.xml
     Author: Pablo Burgos
     Created: 25-Apr-2009

     $Id: build.xml,v 1.1 2011/01/19 23:44:15 tstaig Exp $
-->
        <property environment="env"/>
        <property name="ACSROOT" value="${env.ACSROOT}"/>
        <property name="ACSDATA" value="${env.ACSDATA}"/>
        <property name="ACSROOT.lib.dir" value="${ACSROOT}/lib"/>
        <property name="INTROOT.lib.dir" value="${INTROOT}/lib"/>
        <property name="JacORB.lib.dir" value="${env.JACORB_HOME}/lib"/>
        <!-- set INTROOT to the value from the users env if set; else point to ACSROOT -->
        <condition property="INTROOT" value="${env.INTROOT}">
                <isset property="env.INTROOT"/>
        </condition>
        <property name="INTROOT" value="${env.ACSROOT}"/>
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="target.dir" value="${basedir}/target"/>
        <property name="src.test.java.dir" value="${basedir}/test/alma"/>
        <property name="test-classes.dir" value="${target.dir}/test-classes"/>
        <!-- Classpath declaration -->
        <path id="project.classpath">
                <fileset dir="${lib.dir}">
                        <include name="**/*.jar"/>
                        <include name="**/*.zip"/>
                </fileset>
        </path>
        <condition property="TMCDBCOMMON_IDL.path"
                   value="${INTROOT}/lib/TMCDBCOMMON_IDL.jar"
                   else="${ACSROOT}/lib/TMCDBCOMMON_IDL.jar">
                <and>
                        <available property="TMCDBCOMMON_IDL.introot.present"
                                   file="${INTROOT}/lib/TMCDBCOMMON_IDL.jar"
                                   type="file"/>
                </and>
        </condition>
        <condition property="MonitorArchiverIF.path"
                   value="${INTROOT}/lib/MonitorArchiverIF.jar"
                   else="${ACSROOT}/lib/MonitorArchiverIF.jar">
                <and>
                        <available property="MonitorArchiverIF.introot.present"
                                   file="${INTROOT}/lib/MonitorArchiverIF.jar"
                                   type="file"/>
                </and>
        </condition>
        <condition property="CollectorListStatus.path"
                   value="${INTROOT}/lib/CollectorListStatus.jar"
                   else="${ACSROOT}/lib/CollectorListStatus.jar">
                <and>
                        <available property="CollectorListStatus.introot.present"
                                   file="${INTROOT}/lib/CollectorListStatus.jar"
                                   type="file"/>
                </and>
        </condition>
              
        <condition property="MonitorCollector.path"
                   value="${INTROOT}/lib/MonitorCollector.jar"
                   else="${ACSROOT}/lib/MonitorCollector.jar">
                <and>
                        <available property="MonitorCollector.introot.present"
                                   file="${INTROOT}/lib/MonitorCollector.jar"
                                   type="file"/>
                </and>
        </condition>
                <condition property="MonitorArchiver.path"
                   value="${INTROOT}/lib/MonitorArchiver.jar"
                   else="${ACSROOT}/lib/MonitorArchiver.jar">
                <and>
                        <available property="MonitorArchiver.introot.present"
                                   file="${INTROOT}/lib/MonitorArchiver.jar"
                                   type="file"/>
                </and>
        </condition>
              <condition property="MonitorCollectorErr.path"
                   value="${INTROOT}/lib/MonitorCollectorErr.jar"
                   else="${ACSROOT}/lib/MonitorCollectorErr.jar">
                <and>
                        <available property="MonitorCollectorErr.introot.present"
                                   file="${INTROOT}/lib/MonitorCollectorErr.jar"
                                   type="file"/>
                </and>
        </condition>
                <condition property="TMCDBDAOLayer.path"
                   value="${INTROOT}/lib/TMCDBDAOLayer.jar"
                   else="${ACSROOT}/lib/TMCDBDAOLayer.jar">
                <and>
                        <available property="TMCDBDAOLayer.introot.present"
                                   file="${INTROOT}/lib/TMCDBDAOLayer.jar"
                                   type="file"/>
                </and>
        </condition>
        
        
    <condition property="TMCDBPersistenceLayer.path"
                   value="${INTROOT}/lib/TMCDBPersistenceLayer.jar"
                   else="${ACSROOT}/lib/TMCDBPersistenceLayer.jar">
                <and>
                        <available property="TMCDBPersistenceLayer.introot.present"
                                   file="${INTROOT}/lib/TMCDBPersistenceLayer.jar"
                                   type="file"/>
                </and>
     </condition>

        <condition property="MonitoringDAO.path"
                   value="${INTROOT}/lib/MonitoringDAO.jar"
                   else="${ACSROOT}/lib/MonitoringDAO.jar">
                <and>
                        <available property="MonitoringDAO.introot.present"
                                   file="${INTROOT}/lib/MonitoringDAO.jar"
                                   type="file"/>
                </and>
        </condition>
        
        <path id="project.archiver.classpath">
                <path refid="project.classpath"/>
                <pathelement location="${MonitorCollector.path}"/>
                <pathelement location="${TMCDBCOMMON_IDL.path}"/>
                <pathelement location="${MonitoringDAO.path}"/>
                <pathelement location="${MonitorArchiver.path}"/>
                <pathelement location="${MonitorCollectorErr.path}"/>
                <pathelement location="${TMCDBPersistenceLayer.path}"/>
                <pathelement location="${TMCDBDAOLayer.path}"/>
                <pathelement location="${CollectorListStatus.path}"/>
                <pathelement location="${MonitorArchiverIF.path}"/>
                <fileset dir="${ACSROOT.lib.dir}">
                        <include name="**/*.jar"/>
                        <include name="**/*.zip"/>
                </fileset>
                <fileset dir="${JacORB.lib.dir}">
                        <include name="**/*.jar"/>
                        <include name="**/*.zip"/>
                </fileset>
        </path>
        
        
        
        <!-- Clean up -->
        <target name="clean">
                <delete dir="${target.dir}"/>
                <delete dir="${test-classes.dir}"/>
                <delete dir="${target.dir}"/>
                <delete dir="${test-resources-sql.dir}"/>
        </target>
        <target name="init" depends="clean"
                description="Creates all needed folders and files">
                <mkdir dir="${target.dir}"/>
                <mkdir dir="${test-classes.dir}" />
        </target>
        <!-- Next target build test -->
        <target name="compileTest">
                <echo message="Starting compiling test process"></echo>
                <javac destdir="${test-classes.dir}" verbose="true"
                       nowarn="true">
                        <src path="${src.test.java.dir}"/>
                        <!-- <classpath refid="project.classpath"/>-->
                        <classpath>
                                <!--<pathelement location="${target.dir}/${target.name}"/>-->
                                <path refid="project.archiver.classpath"/>
                        </classpath>
                </javac>
        </target>
        <taskdef resource="testngtasks"
                 classpathref="project.archiver.classpath"/>
        <target name="testMonitorArchiver">
                <testng groups="blobber">
                        <!--<env key="JAVA_HOME" value="${user.home}/JDK"/>-->
                        <sysproperty key="basedir" value="${basedir}"/>
                        <classpath>
                                <path refid="project.archiver.classpath"/>
                                <pathelement location="${test-classes.dir}"/>
                                <!-- <pathelement location="${target.jar}"/>-->
                        </classpath>
                        <classfileset dir="${test-classes.dir}"
                                      includes="**/*.class"/>
                        <!--<xmlfileset dir="${test-resources-testng.dir}" includes="testng.xml"/>-->
                </testng>
        </target>
         <target name="test" depends="clean, init, compileTest, testMonitorArchiver" description="Test Archiver module ">
</target>
</project>
