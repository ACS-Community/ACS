# Python stubs generated by omniidl from /diska/home/almadev/MODULES_SVN_1_7/ACS/LGPL/CommonSoftware/ACSLaser/demo/src/../idl/demoComponents.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "CosProperty.idl"
import CosProperty_idl
_0_CosPropertyService = omniORB.openModule("CosPropertyService")
_0_CosPropertyService__POA = omniORB.openModule("CosPropertyService__POA")

#
# Start of module "alarmsystemdemo"
#
__name__ = "alarmsystemdemo"
_0_alarmsystemdemo = omniORB.openModule("alarmsystemdemo", r"/diska/home/almadev/MODULES_SVN_1_7/ACS/LGPL/CommonSoftware/ACSLaser/demo/src/../idl/demoComponents.idl")
_0_alarmsystemdemo__POA = omniORB.openModule("alarmsystemdemo__POA", r"/diska/home/almadev/MODULES_SVN_1_7/ACS/LGPL/CommonSoftware/ACSLaser/demo/src/../idl/demoComponents.idl")


# interface PS
_0_alarmsystemdemo._d_PS = (omniORB.tcInternal.tv_objref, "IDL:alma/alarmsystemdemo/PS:1.0", "PS")
omniORB.typeMapping["IDL:alma/alarmsystemdemo/PS:1.0"] = _0_alarmsystemdemo._d_PS
_0_alarmsystemdemo.PS = omniORB.newEmptyClass()
class PS (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo._d_PS[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_alarmsystemdemo.PS = PS
_0_alarmsystemdemo._tc_PS = omniORB.tcInternal.createTypeCode(_0_alarmsystemdemo._d_PS)
omniORB.registerType(PS._NP_RepositoryId, _0_alarmsystemdemo._d_PS, _0_alarmsystemdemo._tc_PS)

# PS operations and attributes
PS._d_faultPS = ((), (), None)
PS._d_terminate_faultPS = ((), (), None)

# PS object reference
class _objref_PS (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = PS._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def faultPS(self, *args):
        return _omnipy.invoke(self, "faultPS", _0_alarmsystemdemo.PS._d_faultPS, args)

    def terminate_faultPS(self, *args):
        return _omnipy.invoke(self, "terminate_faultPS", _0_alarmsystemdemo.PS._d_terminate_faultPS, args)

    __methods__ = ["faultPS", "terminate_faultPS"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(PS._NP_RepositoryId, _objref_PS)
_0_alarmsystemdemo._objref_PS = _objref_PS
del PS, _objref_PS

# PS skeleton
__name__ = "alarmsystemdemo__POA"
class PS (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo.PS._NP_RepositoryId


    _omni_op_d = {"faultPS": _0_alarmsystemdemo.PS._d_faultPS, "terminate_faultPS": _0_alarmsystemdemo.PS._d_terminate_faultPS}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

PS._omni_skeleton = PS
_0_alarmsystemdemo__POA.PS = PS
omniORB.registerSkeleton(PS._NP_RepositoryId, PS)
del PS
__name__ = "alarmsystemdemo"

# interface Mount
_0_alarmsystemdemo._d_Mount = (omniORB.tcInternal.tv_objref, "IDL:alma/alarmsystemdemo/Mount:1.0", "Mount")
omniORB.typeMapping["IDL:alma/alarmsystemdemo/Mount:1.0"] = _0_alarmsystemdemo._d_Mount
_0_alarmsystemdemo.Mount = omniORB.newEmptyClass()
class Mount (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo._d_Mount[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_alarmsystemdemo.Mount = Mount
_0_alarmsystemdemo._tc_Mount = omniORB.tcInternal.createTypeCode(_0_alarmsystemdemo._d_Mount)
omniORB.registerType(Mount._NP_RepositoryId, _0_alarmsystemdemo._d_Mount, _0_alarmsystemdemo._tc_Mount)

# Mount operations and attributes
Mount._d_faultMount = ((), (), None)
Mount._d_terminate_faultMount = ((), (), None)

# Mount object reference
class _objref_Mount (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = Mount._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def faultMount(self, *args):
        return _omnipy.invoke(self, "faultMount", _0_alarmsystemdemo.Mount._d_faultMount, args)

    def terminate_faultMount(self, *args):
        return _omnipy.invoke(self, "terminate_faultMount", _0_alarmsystemdemo.Mount._d_terminate_faultMount, args)

    __methods__ = ["faultMount", "terminate_faultMount"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(Mount._NP_RepositoryId, _objref_Mount)
_0_alarmsystemdemo._objref_Mount = _objref_Mount
del Mount, _objref_Mount

# Mount skeleton
__name__ = "alarmsystemdemo__POA"
class Mount (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo.Mount._NP_RepositoryId


    _omni_op_d = {"faultMount": _0_alarmsystemdemo.Mount._d_faultMount, "terminate_faultMount": _0_alarmsystemdemo.Mount._d_terminate_faultMount}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

Mount._omni_skeleton = Mount
_0_alarmsystemdemo__POA.Mount = Mount
omniORB.registerSkeleton(Mount._NP_RepositoryId, Mount)
del Mount
__name__ = "alarmsystemdemo"

# interface Antenna
_0_alarmsystemdemo._d_Antenna = (omniORB.tcInternal.tv_objref, "IDL:alma/alarmsystemdemo/Antenna:1.0", "Antenna")
omniORB.typeMapping["IDL:alma/alarmsystemdemo/Antenna:1.0"] = _0_alarmsystemdemo._d_Antenna
_0_alarmsystemdemo.Antenna = omniORB.newEmptyClass()
class Antenna (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo._d_Antenna[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_alarmsystemdemo.Antenna = Antenna
_0_alarmsystemdemo._tc_Antenna = omniORB.tcInternal.createTypeCode(_0_alarmsystemdemo._d_Antenna)
omniORB.registerType(Antenna._NP_RepositoryId, _0_alarmsystemdemo._d_Antenna, _0_alarmsystemdemo._tc_Antenna)

# Antenna operations and attributes
Antenna._d_faultAntenna = ((), (), None)
Antenna._d_terminate_faultAntenna = ((), (), None)

# Antenna object reference
class _objref_Antenna (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = Antenna._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def faultAntenna(self, *args):
        return _omnipy.invoke(self, "faultAntenna", _0_alarmsystemdemo.Antenna._d_faultAntenna, args)

    def terminate_faultAntenna(self, *args):
        return _omnipy.invoke(self, "terminate_faultAntenna", _0_alarmsystemdemo.Antenna._d_terminate_faultAntenna, args)

    __methods__ = ["faultAntenna", "terminate_faultAntenna"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(Antenna._NP_RepositoryId, _objref_Antenna)
_0_alarmsystemdemo._objref_Antenna = _objref_Antenna
del Antenna, _objref_Antenna

# Antenna skeleton
__name__ = "alarmsystemdemo__POA"
class Antenna (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo.Antenna._NP_RepositoryId


    _omni_op_d = {"faultAntenna": _0_alarmsystemdemo.Antenna._d_faultAntenna, "terminate_faultAntenna": _0_alarmsystemdemo.Antenna._d_terminate_faultAntenna}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

Antenna._omni_skeleton = Antenna
_0_alarmsystemdemo__POA.Antenna = Antenna
omniORB.registerSkeleton(Antenna._NP_RepositoryId, Antenna)
del Antenna
__name__ = "alarmsystemdemo"

# interface MF
_0_alarmsystemdemo._d_MF = (omniORB.tcInternal.tv_objref, "IDL:alma/alarmsystemdemo/MF:1.0", "MF")
omniORB.typeMapping["IDL:alma/alarmsystemdemo/MF:1.0"] = _0_alarmsystemdemo._d_MF
_0_alarmsystemdemo.MF = omniORB.newEmptyClass()
class MF (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo._d_MF[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_alarmsystemdemo.MF = MF
_0_alarmsystemdemo._tc_MF = omniORB.tcInternal.createTypeCode(_0_alarmsystemdemo._d_MF)
omniORB.registerType(MF._NP_RepositoryId, _0_alarmsystemdemo._d_MF, _0_alarmsystemdemo._tc_MF)

# MF operations and attributes
MF._d_multiFault = ((), (), None)
MF._d_terminate_multiFault = ((), (), None)

# MF object reference
class _objref_MF (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = MF._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def multiFault(self, *args):
        return _omnipy.invoke(self, "multiFault", _0_alarmsystemdemo.MF._d_multiFault, args)

    def terminate_multiFault(self, *args):
        return _omnipy.invoke(self, "terminate_multiFault", _0_alarmsystemdemo.MF._d_terminate_multiFault, args)

    __methods__ = ["multiFault", "terminate_multiFault"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(MF._NP_RepositoryId, _objref_MF)
_0_alarmsystemdemo._objref_MF = _objref_MF
del MF, _objref_MF

# MF skeleton
__name__ = "alarmsystemdemo__POA"
class MF (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_alarmsystemdemo.MF._NP_RepositoryId


    _omni_op_d = {"multiFault": _0_alarmsystemdemo.MF._d_multiFault, "terminate_multiFault": _0_alarmsystemdemo.MF._d_terminate_multiFault}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

MF._omni_skeleton = MF
_0_alarmsystemdemo__POA.MF = MF
omniORB.registerSkeleton(MF._NP_RepositoryId, MF)
del MF
__name__ = "alarmsystemdemo"

#
# End of module "alarmsystemdemo"
#
__name__ = "demoComponents_idl"

_exported_modules = ( "alarmsystemdemo", )

# The end.
