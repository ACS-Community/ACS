// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/


ACE_INLINE
void
POA_alarmsystemdemo::PS::_get_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::PS *> (servant);
  POA_ACS::ACSComponent::_get_name_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::PS::_get_componentState_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::PS *> (servant);
  POA_ACS::ACSComponent::_get_componentState_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::Mount::_get_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::Mount *> (servant);
  POA_ACS::ACSComponent::_get_name_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::Mount::_get_componentState_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::Mount *> (servant);
  POA_ACS::ACSComponent::_get_componentState_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::Antenna::_get_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::Antenna *> (servant);
  POA_ACS::ACSComponent::_get_name_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::Antenna::_get_componentState_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::Antenna *> (servant);
  POA_ACS::ACSComponent::_get_componentState_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::MF::_get_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::MF *> (servant);
  POA_ACS::ACSComponent::_get_name_skel (
      server_request,
      servant_upcall,
      impl);
}

ACE_INLINE
void
POA_alarmsystemdemo::MF::_get_componentState_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant)
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_alarmsystemdemo::MF *> (servant);
  POA_ACS::ACSComponent::_get_componentState_skel (
      server_request,
      servant_upcall,
      impl);
}

