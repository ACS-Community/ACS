#ifndef _ACSLASER_CONTAINERTEST_IDL_
#define _ACSLASER_CONTAINERTEST_IDL_

/*******************************************************************************
*    ALMA - Atacama Large Millimiter Array
*
*    (c) European Southern Observatory, 2011
*    Copyright by ESO (in the framework of the ALMA collaboration)
*    and Cosylab 2011, All rights reserved
*
*    This library is free software; you can redistribute it and/or
*    modify it under the terms of the GNU Lesser General Public
*    License as published by the Free Software Foundation; either
*    version 2.1 of the License, or (at your option) any later version.
*
*    This library is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*    Lesser General Public License for more details.
*
*    You should have received a copy of the GNU Lesser General Public
*    License along with this library; if not, write to the Free Software
*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
*
*
* who       when      what
* --------  --------  ----------------------------------------------
* hsommer 2012-11-16 created
*
* This file comes from module ACS/LGPL/CommonSoftware/ACSLaser/containerTest
*/

#include <acscomponent.idl>
#include <logging_idl.idl>
#include <ACSErrTypeCommon.idl>
//#include <maci.idl>

#pragma prefix "alma"

/**
 * This module defines test components that get used to check container alarms.
 * (As of ACS 10.2, the only container alarms we have are log throttle alarms.)
 * 
 * Related to log throttling, we also use the component(s) to test a container's 
 * log queue overflow.
 */
module alarmContainerTest 
{
    interface AlarmTestComponent : ACS::ACSComponent
    {
        /** 
         * Creates a burst of logs ('numLogs') at maximum speed, with log level 'logLevel'. 
         */
        void logBurst(in AcsLogLevels::logLevelValue logLevel, in long numLogs) raises (ACSErrTypeCommon::CouldntPerformActionEx);

    };

};

#endif
