<?xml version="1.0" encoding="ISO-8859-1" ?>

<Form version="1.1">
  <NonVisualComponents>
    <Component class="javax.swing.ButtonGroup" name="SNFFbuttonGroup">
    </Component>
    <Component class="javax.swing.ButtonGroup" name="IFMbuttonGroup">
    </Component>
    <Component class="javax.swing.ButtonGroup" name="PDFCbuttonGroup">
    </Component>
    <Component class="javax.swing.ButtonGroup" name="sortOptionButtonGroup">
    </Component>
    <Component class="javax.swing.ButtonGroup" name="hostNameButtonGroup">
    </Component>
  </NonVisualComponents>
  <Properties>
    <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[400, 277]"/>
    </Property>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[630, 380]"/>
    </Property>
  </Properties>
  <Events>
    <EventHandler event="componentShown" listener="java.awt.event.ComponentListener" parameters="java.awt.event.ComponentEvent" handler="formComponentShown"/>
  </Events>
  <AuxValues>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,-100,0,0,3,-92"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="buttonsPanel">
      <Properties>
        <Property name="toolTipText" type="java.lang.String" value=""/>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="South"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignFlowLayout"/>
      <SubComponents>
        <Component class="javax.swing.JButton" name="searchButton">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Dialog" size="12" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Search"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="searchButtonActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="cancelButton">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Dialog" size="12" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Cancel"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="cancelButtonActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton1">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Dialog" size="12" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Switch"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton2">
          <Properties>
            <Property name="text" type="java.lang.String" value="TEST IT"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JPanel" name="mainPanel">
      <Properties>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
            <TitledBorder/>
          </Border>
        </Property>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="North"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
        <Property name="columns" type="int" value="1"/>
        <Property name="rows" type="int" value="0"/>
      </Layout>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="upperMainPanel">

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
            <Property name="columns" type="int" value="0"/>
            <Property name="rows" type="int" value="1"/>
          </Layout>
          <SubComponents>
            <Container class="javax.swing.JPanel" name="SNFFpanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="System Name"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="0"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JRadioButton" name="SNFFallRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="All"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="SNFFbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="SNFFallRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSNFFState() == SearchWindowSettings.ID_ALL ) {&#xa;    SNFFallRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    SNFFallRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="SNFFequalsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Equals"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="SNFFbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="SNFFequalsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSNFFState() == SearchWindowSettings.ID_EQUAL ) {&#xa;    SNFFequalsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    SNFFequalsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="SNFFcontainsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Contains"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="SNFFbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="SNFFcontainsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSNFFState() == SearchWindowSettings.ID_CONTAINS ) {&#xa;    SNFFcontainsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    SNFFcontainsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JTextField" name="SNFFtextField">
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="SNFFtextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="SNFFtextField.setText(settings.getSNFFContains());&#xa;if( SNFFcontainsRadioButton.isSelected() || SNFFequalsRadioButton.isSelected() ) {&#xa;    SNFFtextField.setEnabled(true);&#xa;}&#xa;else {&#xa;    SNFFtextField.setEnabled(false);&#xa;}"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="IFMpanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Identifier"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="0"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JRadioButton" name="IFMallRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="All"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="IFMbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="IFMallRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getIFMState() == SearchWindowSettings.ID_ALL ) {&#xa;    IFMallRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    IFMallRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="IFMequalsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Equals"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="IFMbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="IFMequalsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getIFMState() == SearchWindowSettings.ID_EQUAL ) {&#xa;    IFMequalsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    IFMequalsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="IFMcontainsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Contains"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="IFMbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="IFMcontainsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getIFMState() == SearchWindowSettings.ID_CONTAINS ) {&#xa;    IFMcontainsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    IFMcontainsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JTextField" name="IFMtextField">
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="IFMtextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="IFMtextField.setText(settings.getIFMContains());&#xa;if( IFMcontainsRadioButton.isSelected() || IFMequalsRadioButton.isSelected() ) {&#xa;    IFMtextField.setEnabled(true);&#xa;}&#xa;else {&#xa;    IFMtextField.setEnabled(false);&#xa;}"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="PDFCpanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Problem description"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="0"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JRadioButton" name="PDFCallRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="All"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="PDFCbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="PDFCallRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getPDFCState() == SearchWindowSettings.ID_ALL ) {&#xa;    PDFCallRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    PDFCallRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="PDFCequalsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Equals"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="PDFCbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="PDFCequalsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getPDFCState() == SearchWindowSettings.ID_EQUAL ) {&#xa;    PDFCequalsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    PDFCequalsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="PDFCcontainsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Contains"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="PDFCbuttonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="PDFCcontainsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getPDFCState() == SearchWindowSettings.ID_CONTAINS ) {&#xa;    PDFCcontainsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    PDFCcontainsRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JTextField" name="PDFCtextField">
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="PDFCtextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="PDFCtextField.setText(settings.getPDFCContains());&#xa;if( PDFCcontainsRadioButton.isSelected() || PDFCequalsRadioButton.isSelected() ) {&#xa;    PDFCtextField.setEnabled(true);&#xa;}&#xa;else {&#xa;    PDFCtextField.setEnabled(false);&#xa;}"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="priorityPanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Priority"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="0"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JCheckBox" name="priorityLevel0checkBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Level 0"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="priorityLevel0checkBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if ( settings.getPriority_0() ) {&#xa;    priorityLevel0checkBox.setSelected(true);&#xa;}&#xa;else {&#xa;    priorityLevel0checkBox.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="priorityLevel1checkBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Level 1"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="priorityLevel1checkBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if ( settings.getPriority_1() ) {&#xa;    priorityLevel1checkBox.setSelected(true);&#xa;}&#xa;else {&#xa;    priorityLevel1checkBox.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="priorityLevel2checkBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Level 2"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="priorityLevel2checkBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if ( settings.getPriority_2() ) {&#xa;    priorityLevel2checkBox.setSelected(true);&#xa;}&#xa;else {&#xa;    priorityLevel2checkBox.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="priorityLevel3checkBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Level 3"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="priorityLevel3checkBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if ( settings.getPriority_3() ) {&#xa;    priorityLevel3checkBox.setSelected(true);&#xa;}&#xa;else {&#xa;    priorityLevel3checkBox.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JPanel" name="bottomMainPanel">

          <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
            <Property name="columns" type="int" value="0"/>
            <Property name="rows" type="int" value="1"/>
          </Layout>
          <SubComponents>
            <Container class="javax.swing.JPanel" name="timestampPanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Time Stamp"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="4"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JLabel" name="timestampLabel1">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="After :"/>
                  </Properties>
                </Component>
                <Component class="javax.swing.JTextField" name="timestampAfterTextField">
                  <Properties>
                    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                      <Dimension value="[69, 13]"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="timestampAfterTextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="timestampAfterTextField.setText(settings.getTimeStampAfter());&#xa;if ( settings.isTimeStampEnabled() ) {&#xa;    timestampAfterTextField.setEditable(true);&#xa;}&#xa;else {&#xa;    timestampAfterTextField.setEditable(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JLabel" name="timestampLabel2">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Before :"/>
                  </Properties>
                </Component>
                <Component class="javax.swing.JTextField" name="timestampBeforeTextField">
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="timestampBeforeTextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="timestampBeforeTextField.setText(settings.getTimeStampBefore());&#xa;if ( settings.isTimeStampEnabled() ) {&#xa;    timestampBeforeTextField.setEditable(true);&#xa;}&#xa;else {&#xa;    timestampBeforeTextField.setEditable(false);&#xa;}"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="statusPanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Status"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="0"/>
                <Property name="rows" type="int" value="5"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JCheckBox" name="statusActiveCheckBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Active"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="statusActiveCheckBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="statusActiveCheckBox.setSelected(settings.getStatusActive());&#xa;statusActiveCheckBox.setEnabled(settings.isStatusActiveEnabled());"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="statusAcknowledgedCheckBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Acknowledged"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="statusAcknowledgedCheckBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="statusAcknowledgedCheckBox.setSelected(settings.getStatusAcknowledged());&#xa;statusAcknowledgedCheckBox.setEnabled(settings.isStatusAcknowledgedEnabled());"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="statusHighlightedCheckBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Highlighted"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="statusHighlightedCheckBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="statusHighlightedCheckBox.setSelected(settings.getStatusHighlighted());&#xa;statusHighlightedCheckBox.setEnabled(settings.isStatusHighlightedEnabled());"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="statusMaskedCheckBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Masked"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="statusMaskedCheckBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="statusMaskedCheckBox.setSelected(settings.getStatusMasked());&#xa;statusMaskedCheckBox.setEnabled(settings.isStatusMaskedEnabled());"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JCheckBox" name="statusTerminatedCheckBox">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Terminated"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="statusTerminatedCheckBoxActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="statusTerminatedCheckBox.setSelected(settings.getStatusTerminated());&#xa;statusTerminatedCheckBox.setEnabled(settings.isStatusTerminatedEnabled());"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="sortOptionPanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Sort option"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="0"/>
                <Property name="rows" type="int" value="4"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JRadioButton" name="sortByTimeRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="by time"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="sortOptionButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="sortByTimeRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSortState() == SearchWindowSettings.SORT_BY_TIME ) {&#xa;    sortByTimeRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    sortByTimeRadioButton.setSelected(false);&#xa;}&#xa;sortByTimeRadioButton.setEnabled( settings.isSortByTimeEnabled() );"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="sortByPriorityRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="by priority"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="sortOptionButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="sortByPriorityRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSortState() == SearchWindowSettings.SORT_BY_PRIORITY ) {&#xa;    sortByPriorityRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    sortByPriorityRadioButton.setSelected(false);&#xa;}&#xa;sortByPriorityRadioButton.setEnabled( settings.isSortByPriorityEnabled() );"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="sortGroupNTRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="group N&amp;T"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="sortOptionButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="sortGroupNTRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSortState() == SearchWindowSettings.SORT_BY_GROUP_NT ) {&#xa;    sortGroupNTRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    sortGroupNTRadioButton.setSelected(false);&#xa;}&#xa;sortGroupNTRadioButton.setEnabled( settings.isSortGroupNTEnabled() );"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="sortGroupNTbyPriorityRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="group N&amp;T by prior."/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="sortOptionButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="sortGroupNTbyPriorityRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getSortState() == SearchWindowSettings.SORT_BY_GROUP_NT_BY_PR ) {&#xa;    sortGroupNTbyPriorityRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    sortGroupNTbyPriorityRadioButton.setSelected(false);&#xa;}&#xa;sortGroupNTbyPriorityRadioButton.setEnabled( settings.isSortGroupNTByPriorityEnabled() );"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
            <Container class="javax.swing.JPanel" name="hostNamePanel">
              <Properties>
                <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
                  <Border info="org.netbeans.modules.form.compat2.border.TitledBorderInfo">
                    <TitledBorder title="Host name"/>
                  </Border>
                </Property>
              </Properties>

              <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridLayout">
                <Property name="columns" type="int" value="1"/>
                <Property name="rows" type="int" value="4"/>
              </Layout>
              <SubComponents>
                <Component class="javax.swing.JRadioButton" name="hostNameAllRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="All"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="hostNameButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="hostNameAllRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getCAPHostNameState() == SearchWindowSettings.CAP_HOST_NAME_ALL ) {&#xa;    hostNameAllRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    hostNameAllRadioButton.setSelected(false);&#xa;}"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JRadioButton" name="hostNameEqualsRadioButton">
                  <Properties>
                    <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                      <Font name="Dialog" size="12" style="0"/>
                    </Property>
                    <Property name="text" type="java.lang.String" value="Equals"/>
                    <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
                      <ComponentRef name="hostNameButtonGroup"/>
                    </Property>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="hostNameEqualsRadioButtonActionPerformed"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="if( settings.getCAPHostNameState() == SearchWindowSettings.CAP_HOST_NAME_EQUALS ) {&#xa;    hostNameEqualsRadioButton.setSelected(true);&#xa;}&#xa;else {&#xa;    hostNameEqualsRadioButton.setSelected(false);&#xa;}&#xa;hostNameEqualsRadioButton.setEnabled( settings.isCAPHostNameEqualsEnabled() );"/>
                  </AuxValues>
                </Component>
                <Component class="javax.swing.JTextField" name="hostNameTextField">
                  <Events>
                    <EventHandler event="caretUpdate" listener="javax.swing.event.CaretListener" parameters="javax.swing.event.CaretEvent" handler="hostNameTextFieldCaretUpdate"/>
                  </Events>
                  <AuxValues>
                    <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="hostNameTextField.setText(settings.getCAPHostNameEquals());&#xa;if( hostNameEqualsRadioButton.isSelected() ) {&#xa;    hostNameTextField.setEnabled(true);&#xa;}&#xa;else {&#xa;    hostNameTextField.setEnabled(false);&#xa;}&#xa;hostNameTextField.setEnabled( settings.isCAPHostNameEqualsEnabled() &amp;&amp; hostNameEqualsRadioButton.isEnabled() &amp;&amp; hostNameEqualsRadioButton.isSelected() );"/>
                  </AuxValues>
                </Component>
              </SubComponents>
            </Container>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>

