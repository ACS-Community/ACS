/*
 *    ALMA - Atacama Large Millimiter Array
 *    (c) European Southern Observatory, 2002
 *    Copyright by ESO (in the framework of the ALMA collaboration),
 *    All rights reserved
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 *    MA 02111-1307  USA
 */
                                                                                                                       
#ifndef _ALARMSERVICEDEMO_IDL_
#define _ALARMSERVICEDEMO_IDL_
                                                                                                                       
#include <baci.idl>
#include <enumpropMACRO.idl>
                                                                                                                       
#pragma prefix "alma"
                                                                                                                       
module alarmsystemPropTest
{
	// The enum to trigger alarms
	enum AlarmEnum { Ok, Not, Initing, Busy };
	ACS_ENUM(AlarmEnum);

interface BaciPropTest :  ACS::CharacteristicComponent
	{
		// Methods to change the value of the double property and trigger an alarm
		void setDoubleVar(in float val);
		
		// Set the value of the pattern property
		void setPatternVar(in long val);
		
		// Set the value of the boolean property
		void setBooleanVar(in boolean val);
		
		// Set the value of the enum property
		void setEnumVar(in AlarmEnum val);
		
		// Set the FF and FM of the property, then change its value
		// 
		// This method is here to test if baci generate the alarm with the
		// passed FF and FM
		void setDoubleVarComplete(in float val, in string faultFamily, in string faultMember);
	
		/**
		 * The property to set of the limits defined in the CDB
		 * and checks if baci sends an alarm
		 */
		readonly attribute ACS::ROdouble testDoubleVar;
		
		// A pattern property
		readonly attribute ACS::ROpattern testPatternVar;
		
		// An enum property
		readonly attribute ROAlarmEnum testEnumVar;
		
		// An boolean property
		readonly attribute ACS::ROboolean testBooleanVar;
        };
};

#endif

