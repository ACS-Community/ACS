/*
 *    ALMA - Atacama Large Millimiter Array
 *    (c) European Southern Observatory, 2002
 *    Copyright by ESO (in the framework of the ALMA collaboration),
 *    All rights reserved
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 *    MA 02111-1307  USA
 */

#ifndef _DEFINITIONSERVICE_IDL_
#define _DEFINITIONSERVICE_IDL_

#include <acscomponent.idl>
#include "AlarmDefinitions.idl"
#include <LaserExceptions.idl>

#pragma prefix "alma"

module alarmsystem
{
	interface DefinitionService : ACS::ACSComponent
	{	
		//typedef sequence<string> string_sequence;
		//string_sequence getAdminUsers(); 
		AlarmDefinition getAlarm(in string alarmId) raises (alarmsystem::LaserDefinitionException);
		AlarmDefinitionSequence getAlarms(in string userId) raises (LaserDefinitionException);
		CategoryDefinitionSequence getCategories(in string userId) raises (LaserDefinitionException) ;
		CategoryDefinition getCategoryByID(in long categoryId) raises (LaserDefinitionException);
		CategoryDefinition getCategoryByPath(in string path) raises (LaserDefinitionException);
		void setMultiplicityThreshold(in string userId, in MultiplicityThreshold threshold) raises (LaserDefinitionException);
		void setMultiplicityThresholds(in string userId, in MultiplicityThresholdSequence thresholds) raises (LaserDefinitionException);
		SourceDefinition getSource(in string sourceId) raises (LaserDefinitionException);
		SourceDefinitionSequence getSources(in string userId) raises (LaserDefinitionException);
		void addMaintenanceMask(in string userId, in AlarmDefinition alarm, in MaintenanceMask mask)
      raises (LaserDefinitionException);
		void addModeMask(in string userId, in AlarmDefinition alarm, in ModeMask mask) raises (LaserDefinitionException);
		string createAdminUser(in string name, in string password) raises (LaserDefinitionException);
		void createAlarm(in string userId, in AlarmDefinition alarmDef) raises (LaserDefinitionException);
		void createAlarms(in string userId, in AlarmDefinitionSequence alarms) raises (LaserDefinitionException);
		void createCategories(in string userId, in CategoryDefinitionSequence categories) raises (LaserDefinitionException);
		void createCategory(in string userId, in CategoryDefinition categoryDef) raises (LaserDefinitionException);
		void createCategoryLink(in string userId, in CategoryLink link) raises (LaserDefinitionException);
		void createCategoryLinks(in string userId, in CategoryLinkSequence categoryLinks) raises (LaserDefinitionException);
		void createMultiplicityLink(in string userId, in ReductionLink link) raises (LaserDefinitionException);
		void createMultiplicityLinks(in string userId, in ReductionLinkSequence reductionLinks) raises (LaserDefinitionException);
		void createNodeLink(in string userId, in ReductionLink link) raises (LaserDefinitionException);
		void createNodeLinks(in string userId, in ReductionLinkSequence reductionLinks) raises (LaserDefinitionException);
		void createSource(in string userId, in SourceDefinition sourceDef) raises (LaserDefinitionException);
		void createSources(in string userId, in SourceDefinitionSequence sources) raises (LaserDefinitionException);
		string loginAdminUser(in string name, in string password) raises (LaserDefinitionException);
		void removeAdminUser(in string name) raises (LaserDefinitionException);
		void removeAlarm(in string userId, in AlarmDefinition alarm) raises (LaserDefinitionException);
		void removeAlarms(in string userId, in AlarmDefinitionSequence alarms) raises (LaserDefinitionException);
		void removeCategories(in string userId, in CategoryDefinitionSequence categories) raises (LaserDefinitionException);
		void removeCategory(in string userId, in CategoryDefinition categoryDef) raises (LaserDefinitionException);
		void removeCategoryLink(in string userId, in CategoryLink link) raises (LaserDefinitionException);
		void removeCategoryLinks(in string userId, in CategoryLinkSequence categoryLinks) raises (LaserDefinitionException);
		void removeMaintenanceMask(in string userId, in AlarmDefinition alarm, in MaintenanceMask mask)
      		raises (LaserDefinitionException);
		void removeModeMask(in string userId, in AlarmDefinition alarm, in ModeMask mode) raises (LaserDefinitionException);
		void removeMultiplicityLink(in string userId, in ReductionLink link) raises (LaserDefinitionException);
		void removeMultiplicityLinks(in string userId, in ReductionLinkSequence reductionLinks) raises (LaserDefinitionException);
		void removeNodeLink(in string userId, in ReductionLink link) raises (LaserDefinitionException);
		void removeNodeLinks(in string userId, in ReductionLinkSequence reductionLinks) raises (LaserDefinitionException);
		void removeSource(in string userId, in SourceDefinition sourceDef) raises (LaserDefinitionException);
		void removeSources(in string userId, in SourceDefinitionSequence sources) raises (LaserDefinitionException);
		void updateAlarm(in string userId, in AlarmDefinition alarmDef) raises (LaserDefinitionException);
		void updateAlarms(in string userId, in AlarmDefinitionSequence alarms) raises (LaserDefinitionException);
		void updateCategories(in string userId, in CategoryDefinitionSequence categories) raises (LaserDefinitionException);
		void updateCategory(in string userId, in CategoryDefinition categoryDef) raises (LaserDefinitionException);
		void updateSource(in string userId, in SourceDefinition sourceDef) raises (LaserDefinitionException);
		void updateSources(in string userId, in SourceDefinitionSequence sources) raises (LaserDefinitionException);
		void uploadAlarms(in string userId, in AlarmDefinitionSequence toBeCreated, in AlarmDefinitionSequence toBeUpdated, in AlarmDefinitionSequence toBeRemoved)
      		raises (LaserDefinitionException);
		void uploadCategories(in string userId, in CategoryDefinitionSequence toBeCreated, in CategoryDefinitionSequence toBeUpdated, in CategoryDefinitionSequence toBeRemoved)
      		raises (LaserDefinitionException);
		void uploadCategoryLinks(in string userId, in CategoryLinkSequence toBeCreated, in CategoryLinkSequence toBeRemoved)
			raises (LaserDefinitionException);
		void uploadMultiplicity(in string userId, in ReductionLinkSequence toBeCreated, in ReductionLinkSequence toBeRemoved, in ReductionLinkSequence thresholds)
			raises (LaserDefinitionException);
		void uploadNode(in string userId, in ReductionLinkSequence toBeCreated, in ReductionLinkSequence toBeRemoved) raises (LaserDefinitionException);
		void uploadSources(in string userId, in SourceDefinitionSequence toBeCreated, in SourceDefinitionSequence toBeUpdated, in SourceDefinitionSequence toBeRemoved) raises (LaserDefinitionException) ;
	};

};

#endif
