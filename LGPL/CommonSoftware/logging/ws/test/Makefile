#*******************************************************************************
# ALMA - Atacama Large Millimiter Array
# (c) European Southern Observatory, 2002
# Copyright by ESO (in the framework of the ALMA collaboration)
# and Cosylab 2002, All rights reserved
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
# MA 02111-1307  USA
#
# "@(#) $Id: Makefile,v 1.56 2012/01/20 22:07:44 tstaig Exp $"
#
# Makefile of ........
#
# who       when      what
# --------  --------  ----------------------------------------------
# gchiozzi 2003-05-14 Added TestDriver
# gchiozzi 2003-04-29 Added handling of WIND_BASE for WS only ot LCU test
# matej  22/09/02  created
#

#*******************************************************************************
# This Makefile follows VLT Standards (see Makefile(5) for more).
#*******************************************************************************
# REMARKS
#    None
#------------------------------------------------------------------------

#
# user definable C-compilation flags
#USER_CFLAGS = 

#
# additional include and library search paths
#USER_INC = 
#USER_LIB =

#
# MODULE CODE DESCRIPTION:
# ------------------------
# As a general rule:  public file are "cleaned" and "installed"  
#                     local (_L) are not "installed".

#
# C programs (public and local)
# -----------------------------
EXECUTABLES     =
EXECUTABLES_L   = 	testLogger testLoggerStats testNoLogging testMacros \
			loggingXMLParserTest testGenericLogger testLoggable testLoggingProxy \
            testAnyLog testAUD_ARR testLog4cpp testIsInitThread testMultiThreads testLoggingSubscriber testGenLogs testLoggerStatistics

testLoggerStatistics_OBJECTS = testLoggerStatistics
testLoggerStatistics_LDFLAGS =
testLoggerStatistics_LIBS = C++ dl cppunit logging

loggingXMLParserTest_OBJECTS = loggingXMLParserTest
loggingXMLParserTest_LIBS = logging

testLogger_OBJECTS = testLogger
testLogger_LIBS    = logging

testLoggerStats_OBJECTS = testLoggerStats
testLoggerStats_LIBS    = logging

testLoggable_OBJECTS = testLoggable
testLoggable_LIBS    = logging

testGenericLogger_OBJECTS = testGenericLogger
testGenericLogger_LIBS    = baselogging

testNoLogging_OBJECTS = testNoLogging
testNoLogging_LIBS    = logging

testMacros_OBJECTS	= testMacros
testMacros_LIBS		= logging

testLoggingProxy_OBJECTS= testLoggingProxy
testLoggingProxy_LIBS	= logging

testAnyLog_OBJECTS = testAnyLog
testAnyLog_LIBS   = logging

testAUD_ARR_OBJECTS = testAUD_ARR
testAUD_ARR_LIBS = logging maciClient

testLog4cpp_OBJECTS = testLog4cpp
testLog4cpp_LIBS   = logging maciClient acserr

testIsInitThread_OBJECTS= testIsInitThread
testIsInitThread_LIBS	= logging

testMultiThreads_OBJECTS= testMultiThreads
testMultiThreads_LIBS	= logging

testLoggingSubscriber_OBJECTS=testLoggingSubscriber ../src/loggingHelper
testLoggingSubscriber_LIBS=logging acsThread TAO_CosNotification_Serv

testGenLogs_OBJECTS=testGenLogs ../src/loggingHelper
testGenLogs_LIBS=logging

#
# <brief description of xxxxx program>
xxxxx_OBJECTS   =	
xxxxx_LDFLAGS   =
xxxxx_LIBS      =

#
# special compilation flags for single c sources
#yyyyy_CFLAGS   = 

#
# Includes (.h) files (public only)
# ---------------------------------
INCLUDES        =

#
# Libraries (public and local)
# ----------------------------
LIBRARIES       =
LIBRARIES_L     =

#
# <brief description of lllll library>
lllll_OBJECTS   =

#
# Scripts (public and local)
# ----------------------------
SCRIPTS         =
SCRIPTS_L       =  testACS_LOG_STDOUT testLocalCache testLoggerStatistics.sh

#
# TCL scripts (public and local)
# ------------------------------
TCL_SCRIPTS     =
TCL_SCRIPTS_L   =

#
# Python stuff (public and local)
# ----------------------------
PY_SCRIPTS         =
PY_SCRIPTS_L       =

PY_MODULES         =
PY_MODULES_L       =

PY_PACKAGES        =
PY_PACKAGES_L      =
pppppp_MODULES	   =

#
# <brief description of tttttt tcl-script>
tttttt_OBJECTS  =
tttttt_TCLSH    = 
tttttt_LIBS     = 

#
# TCL libraries (public and local)
# ------------------------------
TCL_LIBRARIES   =
TCL_LIBRARIES_L =

#
# <brief description of tttlll library>
tttlll_OBJECTS  = 

#
# UIF panels (public and local)
# ----------------------------
PANELS   =
PANELS_L = 

# 
# IDL Files and flags
# 
IDL_FILES =
IDL_TAO_FLAGS =
USER_IDL =

#
# man pages to be done
# --------------------
MANSECTIONS =
MAN1 =
MAN3 =
MAN5 =
MAN7 =
MAN8 =

#
# local man pages
# ---------------
MANl =

#
# ASCII file to be converted into Framemaker-MIF
# --------------------
ASCII_TO_MIF = 

#
# INS_ROOT files to be installed
#-------------------------------
INS_ROOT_FILES =
INS_ROOT_DIR   =

#
# other files to be installed
#----------------------------
INSTALL_FILES =

#
# list of all possible C-sources (used to create automatic dependencies)
# ------------------------------
CSOURCENAMES = \
	$(foreach exe, $(EXECUTABLES) $(EXECUTABLES_L), $($(exe)_OBJECTS)) \
	$(foreach lib, $(LIBRARIES) $(LIBRARIES_L), $($(lib)_OBJECTS))

#
#>>>>> END OF standard rules

#
# INCLUDE STANDARDS
# -----------------
MAKEDIRTMP := $(shell searchFile include/acsMakefile)
ifneq ($(MAKEDIRTMP),\#error\#)
   MAKEDIR := $(MAKEDIRTMP)/include
   include $(MAKEDIR)/acsMakefile
endif
#
# TARGETS
# -------
all:	do_all
	@mkdir -p tmp
	@echo " . . . 'all' done" 

clean : clean_all 
	$(RM) *~ ref/*~
	$(RM) tatlogs
	$(RM) tmp
	@echo " . . . clean done"

clean_dist : clean_all clean_dist_all 
	@echo " . . . clean_dist done"

man   : do_man 
	@echo " . . . man page(s) done"

install : install_all
	@echo " . . . installation done"

#___oOo___
