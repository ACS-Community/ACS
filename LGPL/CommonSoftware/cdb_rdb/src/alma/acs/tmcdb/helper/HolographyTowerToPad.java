package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * HolographyTowerToPad generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`HOLOGRAPHYTOWERTOPAD`"
    , uniqueConstraints =  @UniqueConstraint(columnNames={"`HOLOGRAPHYTOWERID`", "`PADID`"})
)
public class HolographyTowerToPad extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer towerToPadId;
     protected Pad pad;
     protected HolographyTower holographyTower;
     protected Double azimuth;
     protected Double elevation;

    public HolographyTowerToPad() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="HologrTTP_seq")}
	)

    
    @Column(name="`TOWERTOPADID`", unique=true, nullable=false)
    public Integer getTowerToPadId() {
        return this.towerToPadId;
    }
    
    public void setTowerToPadId(Integer towerToPadId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("towerToPadId", this.towerToPadId, this.towerToPadId = towerToPadId);
        else
            this.towerToPadId = towerToPadId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`PADID`", nullable=false)
    public Pad getPad() {
        return this.pad;
    }
    
    public void setPad(Pad pad) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("pad", this.pad, this.pad = pad);
        else
            this.pad = pad;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`HOLOGRAPHYTOWERID`", nullable=false)
    public HolographyTower getHolographyTower() {
        return this.holographyTower;
    }
    
    public void setHolographyTower(HolographyTower holographyTower) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("holographyTower", this.holographyTower, this.holographyTower = holographyTower);
        else
            this.holographyTower = holographyTower;
    }


    
    @Column(name="`AZIMUTH`", nullable=false, precision=64, scale=0)
    public Double getAzimuth() {
        return this.azimuth;
    }
    
    public void setAzimuth(Double azimuth) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("azimuth", this.azimuth, this.azimuth = azimuth);
        else
            this.azimuth = azimuth;
    }


    
    @Column(name="`ELEVATION`", nullable=false, precision=64, scale=0)
    public Double getElevation() {
        return this.elevation;
    }
    
    public void setElevation(Double elevation) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("elevation", this.elevation, this.elevation = elevation);
        else
            this.elevation = elevation;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof HolographyTowerToPad) ) return false;
		 HolographyTowerToPad castOther = ( HolographyTowerToPad ) other;

		 return ( (this.getPad()==castOther.getPad()) || ( this.getPad()!=null && castOther.getPad()!=null && this.getPad().equals(castOther.getPad()) ) )
 && ( (this.getHolographyTower()==castOther.getHolographyTower()) || ( this.getHolographyTower()!=null && castOther.getHolographyTower()!=null && this.getHolographyTower().equals(castOther.getHolographyTower()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getPad() == null ? 0 : this.getPad().hashCode() );
         result = 37 * result + ( getHolographyTower() == null ? 0 : this.getHolographyTower().hashCode() );
         
         
         return result;
   }


}


