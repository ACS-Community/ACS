package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * FrontEnd generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`FRONTEND`"
)
public class FrontEnd extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer baseElementId;
     protected BaseElement baseElement;
     protected Long commissionDate;
     private Set<AntennaToFrontEnd> antennaToFrontEnds = new HashSet<AntennaToFrontEnd>(0);

    public FrontEnd() {
    }
   
       @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="baseElement"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="`BASEELEMENTID`", unique=true, nullable=false)
    public Integer getBaseElementId() {
        return this.baseElementId;
    }
    
    public void setBaseElementId(Integer baseElementId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("baseElementId", this.baseElementId, this.baseElementId = baseElementId);
        else
            this.baseElementId = baseElementId;
    }


@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public BaseElement getBaseElement() {
        return this.baseElement;
    }
    
    public void setBaseElement(BaseElement baseElement) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("baseElement", this.baseElement, this.baseElement = baseElement);
        else
            this.baseElement = baseElement;
    }


    
    @Column(name="`COMMISSIONDATE`", nullable=false)
    public Long getCommissionDate() {
        return this.commissionDate;
    }
    
    public void setCommissionDate(Long commissionDate) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("commissionDate", this.commissionDate, this.commissionDate = commissionDate);
        else
            this.commissionDate = commissionDate;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="frontEnd")
    public Set<AntennaToFrontEnd> getAntennaToFrontEnds() {
        return this.antennaToFrontEnds;
    }
    
    public void setAntennaToFrontEnds(Set<AntennaToFrontEnd> antennaToFrontEnds) {    
    	this.antennaToFrontEnds = antennaToFrontEnds;
    }

	public void addAntennaToFrontEnds(Set<AntennaToFrontEnd> elements) {
		if( this.antennaToFrontEnds != null )
			for(Iterator<AntennaToFrontEnd> it = elements.iterator(); it.hasNext(); )
				addAntennaToFrontEndToAntennaToFrontEnds((AntennaToFrontEnd)it.next());
	}

	public void addAntennaToFrontEndToAntennaToFrontEnds(AntennaToFrontEnd element) {
		if( !this.antennaToFrontEnds.contains(element) ) {
			this.antennaToFrontEnds.add(element);
		}
	}





}


