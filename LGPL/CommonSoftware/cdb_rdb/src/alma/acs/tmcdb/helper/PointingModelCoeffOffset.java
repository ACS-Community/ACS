package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import alma.hibernate.util.StringEnumUserType;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.TypeDef;

/**
 * PointingModelCoeffOffset generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`POINTINGMODELCOEFFOFFSET`"
)
@TypeDef(name="AntennaPMCoeffOffBand", typeClass=StringEnumUserType.class,
   parameters={ @Parameter(name="enumClassName", value="alma.acs.tmcdb.AntennaPMCoeffOffBand") })
public class PointingModelCoeffOffset extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected PointingModelCoeffOffsetId id;
     protected PointingModelCoeff pointingModelCoeff;
     protected Double offset;

    public PointingModelCoeffOffset() {
    }
   
       @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="`pointingModelCoeffId`", column=@Column(name="POINTINGMODELCOEFFID`", nullable=false) ), 
        @AttributeOverride(name="receiverBand`", column=@Column(name="RECEIVERBAND`", nullable=false, length=128) ) } )
    public PointingModelCoeffOffsetId getId() {
        return this.id;
    }
    
    public void setId(PointingModelCoeffOffsetId id) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("id", this.id, this.id = id);
        else
            this.id = id;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`POINTINGMODELCOEFFID`", nullable=false, insertable=false, updatable=false)
    public PointingModelCoeff getPointingModelCoeff() {
        return this.pointingModelCoeff;
    }
    
    public void setPointingModelCoeff(PointingModelCoeff pointingModelCoeff) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("pointingModelCoeff", this.pointingModelCoeff, this.pointingModelCoeff = pointingModelCoeff);
        else
            this.pointingModelCoeff = pointingModelCoeff;
    }


    
    @Column(name="`OFFSET`", nullable=false, precision=64, scale=0)
    public Double getOffset() {
        return this.offset;
    }
    
    public void setOffset(Double offset) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("offset", this.offset, this.offset = offset);
        else
            this.offset = offset;
    }





}


