package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * AssemblyOnline generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`ASSEMBLYONLINE`"
    , uniqueConstraints =  @UniqueConstraint(columnNames={"`ASSEMBLYID`", "`BASEELEMENTONLINEID`"})
)
public class AssemblyOnline extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer assemblyOnlineId;
     protected Assembly assembly;
     protected BaseElementOnline baseElementOnline;
     protected String roleName;
     protected Long startTime;
     protected Long endTime;

    public AssemblyOnline() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="AssembO_seq")}
	)

    
    @Column(name="`ASSEMBLYONLINEID`", unique=true, nullable=false)
    public Integer getAssemblyOnlineId() {
        return this.assemblyOnlineId;
    }
    
    public void setAssemblyOnlineId(Integer assemblyOnlineId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("assemblyOnlineId", this.assemblyOnlineId, this.assemblyOnlineId = assemblyOnlineId);
        else
            this.assemblyOnlineId = assemblyOnlineId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`ASSEMBLYID`", nullable=false)
    public Assembly getAssembly() {
        return this.assembly;
    }
    
    public void setAssembly(Assembly assembly) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("assembly", this.assembly, this.assembly = assembly);
        else
            this.assembly = assembly;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`BASEELEMENTONLINEID`", nullable=false)
    public BaseElementOnline getBaseElementOnline() {
        return this.baseElementOnline;
    }
    
    public void setBaseElementOnline(BaseElementOnline baseElementOnline) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("baseElementOnline", this.baseElementOnline, this.baseElementOnline = baseElementOnline);
        else
            this.baseElementOnline = baseElementOnline;
    }


    
    @Column(name="`ROLENAME`", nullable=false, length=128)
    public String getRoleName() {
        return this.roleName;
    }
    
    public void setRoleName(String roleName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("roleName", this.roleName, this.roleName = roleName);
        else
            this.roleName = roleName;
    }


    
    @Column(name="`STARTTIME`", nullable=false)
    public Long getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Long startTime) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("startTime", this.startTime, this.startTime = startTime);
        else
            this.startTime = startTime;
    }


    
    @Column(name="`ENDTIME`")
    public Long getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Long endTime) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("endTime", this.endTime, this.endTime = endTime);
        else
            this.endTime = endTime;
    }



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AssemblyOnline) ) return false;
		 AssemblyOnline castOther = ( AssemblyOnline ) other;

		 return ( (this.getAssembly()==castOther.getAssembly()) || ( this.getAssembly()!=null && castOther.getAssembly()!=null && this.getAssembly().equals(castOther.getAssembly()) ) )
 && ( (this.getBaseElementOnline()==castOther.getBaseElementOnline()) || ( this.getBaseElementOnline()!=null && castOther.getBaseElementOnline()!=null && this.getBaseElementOnline().equals(castOther.getBaseElementOnline()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getAssembly() == null ? 0 : this.getAssembly().hashCode() );
         result = 37 * result + ( getBaseElementOnline() == null ? 0 : this.getBaseElementOnline().hashCode() );
         
         
         
         return result;
   }


}


