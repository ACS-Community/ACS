package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import alma.hibernate.util.StringEnumUserType;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;

/**
 * CorrQuadrantRack generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`CORRQUADRANTRACK`"
)
@TypeDef(name="CorrRackType", typeClass=StringEnumUserType.class,
   parameters={ @Parameter(name="enumClassName", value="alma.acs.tmcdb.CorrRackType") })
public class CorrQuadrantRack extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer baseElementId;
     protected BaseElement baseElement;
     protected CorrQuadrant corrQuadrant;
     protected String rackName;
     protected CorrRackType rackType;
     private Set<CorrStationBin> corrStationBins = new HashSet<CorrStationBin>(0);
     private Set<CorrelatorBin> correlatorBins = new HashSet<CorrelatorBin>(0);

    public CorrQuadrantRack() {
    }
   
       @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="baseElement"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="`BASEELEMENTID`", unique=true, nullable=false)
    public Integer getBaseElementId() {
        return this.baseElementId;
    }
    
    public void setBaseElementId(Integer baseElementId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("baseElementId", this.baseElementId, this.baseElementId = baseElementId);
        else
            this.baseElementId = baseElementId;
    }


@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public BaseElement getBaseElement() {
        return this.baseElement;
    }
    
    public void setBaseElement(BaseElement baseElement) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("baseElement", this.baseElement, this.baseElement = baseElement);
        else
            this.baseElement = baseElement;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`CORRQUADRANTID`", nullable=false)
    public CorrQuadrant getCorrQuadrant() {
        return this.corrQuadrant;
    }
    
    public void setCorrQuadrant(CorrQuadrant corrQuadrant) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("corrQuadrant", this.corrQuadrant, this.corrQuadrant = corrQuadrant);
        else
            this.corrQuadrant = corrQuadrant;
    }


    
    @Column(name="`RACKNAME`", nullable=false, length=128)
    public String getRackName() {
        return this.rackName;
    }
    
    public void setRackName(String rackName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("rackName", this.rackName, this.rackName = rackName);
        else
            this.rackName = rackName;
    }


    
    @Column(name="`RACKTYPE`", nullable=false, length=16777216)
	@Type(type="CorrRackType")
    public CorrRackType getRackType() {
        return this.rackType;
    }
    
    public void setRackType(CorrRackType rackType) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("rackType", this.rackType, this.rackType = rackType);
        else
            this.rackType = rackType;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="corrQuadrantRack")
    public Set<CorrStationBin> getCorrStationBins() {
        return this.corrStationBins;
    }
    
    public void setCorrStationBins(Set<CorrStationBin> corrStationBins) {    
    	this.corrStationBins = corrStationBins;
    }

	public void addCorrStationBins(Set<CorrStationBin> elements) {
		if( this.corrStationBins != null )
			for(Iterator<CorrStationBin> it = elements.iterator(); it.hasNext(); )
				addCorrStationBinToCorrStationBins((CorrStationBin)it.next());
	}

	public void addCorrStationBinToCorrStationBins(CorrStationBin element) {
		if( !this.corrStationBins.contains(element) ) {
			this.corrStationBins.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="corrQuadrantRack")
    public Set<CorrelatorBin> getCorrelatorBins() {
        return this.correlatorBins;
    }
    
    public void setCorrelatorBins(Set<CorrelatorBin> correlatorBins) {    
    	this.correlatorBins = correlatorBins;
    }

	public void addCorrelatorBins(Set<CorrelatorBin> elements) {
		if( this.correlatorBins != null )
			for(Iterator<CorrelatorBin> it = elements.iterator(); it.hasNext(); )
				addCorrelatorBinToCorrelatorBins((CorrelatorBin)it.next());
	}

	public void addCorrelatorBinToCorrelatorBins(CorrelatorBin element) {
		if( !this.correlatorBins.contains(element) ) {
			this.correlatorBins.add(element);
		}
	}





}


