package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * HWConfiguration generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`HWCONFIGURATION`"
    , uniqueConstraints =  @UniqueConstraint(columnNames="`SWCONFIGURATIONID`")
)
public class HWConfiguration extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer configurationId;
     protected Configuration configuration;
     protected Integer globalConfigId;
     protected String telescopeName;
     protected Double arrayReferenceX;
     protected Double arrayReferenceY;
     protected Double arrayReferenceZ;
     protected Boolean XPDelayBLLocked;
     protected Boolean XPDelayBLIncreaseVersion;
     protected Integer XPDelayBLCurrentVersion;
     protected String XPDelayBLWho;
     protected String XPDelayBLChangeDesc;
     private Set<Assembly> assemblies = new HashSet<Assembly>(0);
     private Set<BaseElementOnline> baseElementOnlines = new HashSet<BaseElementOnline>(0);
     private Set<Startup> startups = new HashSet<Startup>(0);
     private Set<XPDelay> XPDelays = new HashSet<XPDelay>(0);
     private Set<BaseElement> baseElements = new HashSet<BaseElement>(0);
     protected SystemCounters systemCounters;
     private Set<HwSchemas> hwSchemases = new HashSet<HwSchemas>(0);

    public HWConfiguration() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="HWConf_seq")}
	)

    
    @Column(name="`CONFIGURATIONID`", unique=true, nullable=false)
    public Integer getConfigurationId() {
        return this.configurationId;
    }
    
    public void setConfigurationId(Integer configurationId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("configurationId", this.configurationId, this.configurationId = configurationId);
        else
            this.configurationId = configurationId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`SWCONFIGURATIONID`", unique=true, nullable=false)
    public Configuration getConfiguration() {
        return this.configuration;
    }
    
    public void setConfiguration(Configuration configuration) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("configuration", this.configuration, this.configuration = configuration);
        else
            this.configuration = configuration;
    }


    
    @Column(name="`GLOBALCONFIGID`")
    public Integer getGlobalConfigId() {
        return this.globalConfigId;
    }
    
    public void setGlobalConfigId(Integer globalConfigId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("globalConfigId", this.globalConfigId, this.globalConfigId = globalConfigId);
        else
            this.globalConfigId = globalConfigId;
    }


    
    @Column(name="`TELESCOPENAME`", nullable=false, length=128)
    public String getTelescopeName() {
        return this.telescopeName;
    }
    
    public void setTelescopeName(String telescopeName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("telescopeName", this.telescopeName, this.telescopeName = telescopeName);
        else
            this.telescopeName = telescopeName;
    }


    
    @Column(name="`ARRAYREFERENCEX`", precision=64, scale=0)
    public Double getArrayReferenceX() {
        return this.arrayReferenceX;
    }
    
    public void setArrayReferenceX(Double arrayReferenceX) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("arrayReferenceX", this.arrayReferenceX, this.arrayReferenceX = arrayReferenceX);
        else
            this.arrayReferenceX = arrayReferenceX;
    }


    
    @Column(name="`ARRAYREFERENCEY`", precision=64, scale=0)
    public Double getArrayReferenceY() {
        return this.arrayReferenceY;
    }
    
    public void setArrayReferenceY(Double arrayReferenceY) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("arrayReferenceY", this.arrayReferenceY, this.arrayReferenceY = arrayReferenceY);
        else
            this.arrayReferenceY = arrayReferenceY;
    }


    
    @Column(name="`ARRAYREFERENCEZ`", precision=64, scale=0)
    public Double getArrayReferenceZ() {
        return this.arrayReferenceZ;
    }
    
    public void setArrayReferenceZ(Double arrayReferenceZ) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("arrayReferenceZ", this.arrayReferenceZ, this.arrayReferenceZ = arrayReferenceZ);
        else
            this.arrayReferenceZ = arrayReferenceZ;
    }


    
    @Column(name="`XPDELAYBLLOCKED`")
    public Boolean getXPDelayBLLocked() {
        return this.XPDelayBLLocked;
    }
    
    public void setXPDelayBLLocked(Boolean XPDelayBLLocked) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("XPDelayBLLocked", this.XPDelayBLLocked, this.XPDelayBLLocked = XPDelayBLLocked);
        else
            this.XPDelayBLLocked = XPDelayBLLocked;
    }


    
    @Column(name="`XPDELAYBLINCREASEVERSION`")
    public Boolean getXPDelayBLIncreaseVersion() {
        return this.XPDelayBLIncreaseVersion;
    }
    
    public void setXPDelayBLIncreaseVersion(Boolean XPDelayBLIncreaseVersion) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("XPDelayBLIncreaseVersion", this.XPDelayBLIncreaseVersion, this.XPDelayBLIncreaseVersion = XPDelayBLIncreaseVersion);
        else
            this.XPDelayBLIncreaseVersion = XPDelayBLIncreaseVersion;
    }


    
    @Column(name="`XPDELAYBLCURRENTVERSION`")
    public Integer getXPDelayBLCurrentVersion() {
        return this.XPDelayBLCurrentVersion;
    }
    
    public void setXPDelayBLCurrentVersion(Integer XPDelayBLCurrentVersion) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("XPDelayBLCurrentVersion", this.XPDelayBLCurrentVersion, this.XPDelayBLCurrentVersion = XPDelayBLCurrentVersion);
        else
            this.XPDelayBLCurrentVersion = XPDelayBLCurrentVersion;
    }


    
    @Column(name="`XPDELAYBLWHO`", length=128)
    public String getXPDelayBLWho() {
        return this.XPDelayBLWho;
    }
    
    public void setXPDelayBLWho(String XPDelayBLWho) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("XPDelayBLWho", this.XPDelayBLWho, this.XPDelayBLWho = XPDelayBLWho);
        else
            this.XPDelayBLWho = XPDelayBLWho;
    }


    
    @Column(name="`XPDELAYBLCHANGEDESC`", length=16777216)
    public String getXPDelayBLChangeDesc() {
        return this.XPDelayBLChangeDesc;
    }
    
    public void setXPDelayBLChangeDesc(String XPDelayBLChangeDesc) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("XPDelayBLChangeDesc", this.XPDelayBLChangeDesc, this.XPDelayBLChangeDesc = XPDelayBLChangeDesc);
        else
            this.XPDelayBLChangeDesc = XPDelayBLChangeDesc;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<Assembly> getAssemblies() {
        return this.assemblies;
    }
    
    public void setAssemblies(Set<Assembly> assemblies) {    
    	this.assemblies = assemblies;
    }

	public void addAssemblies(Set<Assembly> elements) {
		if( this.assemblies != null )
			for(Iterator<Assembly> it = elements.iterator(); it.hasNext(); )
				addAssemblyToAssemblies((Assembly)it.next());
	}

	public void addAssemblyToAssemblies(Assembly element) {
		if( !this.assemblies.contains(element) ) {
			this.assemblies.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<BaseElementOnline> getBaseElementOnlines() {
        return this.baseElementOnlines;
    }
    
    public void setBaseElementOnlines(Set<BaseElementOnline> baseElementOnlines) {    
    	this.baseElementOnlines = baseElementOnlines;
    }

	public void addBaseElementOnlines(Set<BaseElementOnline> elements) {
		if( this.baseElementOnlines != null )
			for(Iterator<BaseElementOnline> it = elements.iterator(); it.hasNext(); )
				addBaseElementOnlineToBaseElementOnlines((BaseElementOnline)it.next());
	}

	public void addBaseElementOnlineToBaseElementOnlines(BaseElementOnline element) {
		if( !this.baseElementOnlines.contains(element) ) {
			this.baseElementOnlines.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<Startup> getStartups() {
        return this.startups;
    }
    
    public void setStartups(Set<Startup> startups) {    
    	this.startups = startups;
    }

	public void addStartups(Set<Startup> elements) {
		if( this.startups != null )
			for(Iterator<Startup> it = elements.iterator(); it.hasNext(); )
				addStartupToStartups((Startup)it.next());
	}

	public void addStartupToStartups(Startup element) {
		if( !this.startups.contains(element) ) {
			this.startups.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<XPDelay> getXPDelays() {
        return this.XPDelays;
    }
    
    public void setXPDelays(Set<XPDelay> XPDelays) {    
    	this.XPDelays = XPDelays;
    }

	public void addXPDelays(Set<XPDelay> elements) {
		if( this.XPDelays != null )
			for(Iterator<XPDelay> it = elements.iterator(); it.hasNext(); )
				addXPDelayToXPDelays((XPDelay)it.next());
	}

	public void addXPDelayToXPDelays(XPDelay element) {
		if( !this.XPDelays.contains(element) ) {
			this.XPDelays.add(element);
		}
	}


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<BaseElement> getBaseElements() {
        return this.baseElements;
    }
    
    public void setBaseElements(Set<BaseElement> baseElements) {    
    	this.baseElements = baseElements;
    }

	public void addBaseElements(Set<BaseElement> elements) {
		if( this.baseElements != null )
			for(Iterator<BaseElement> it = elements.iterator(); it.hasNext(); )
				addBaseElementToBaseElements((BaseElement)it.next());
	}

	public void addBaseElementToBaseElements(BaseElement element) {
		if( !this.baseElements.contains(element) ) {
			this.baseElements.add(element);
		}
	}


@OneToOne(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public SystemCounters getSystemCounters() {
        return this.systemCounters;
    }
    
    public void setSystemCounters(SystemCounters systemCounters) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("systemCounters", this.systemCounters, this.systemCounters = systemCounters);
        else
            this.systemCounters = systemCounters;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="HWConfiguration")
    public Set<HwSchemas> getHwSchemases() {
        return this.hwSchemases;
    }
    
    public void setHwSchemases(Set<HwSchemas> hwSchemases) {    
    	this.hwSchemases = hwSchemases;
    }

	public void addHwSchemases(Set<HwSchemas> elements) {
		if( this.hwSchemases != null )
			for(Iterator<HwSchemas> it = elements.iterator(); it.hasNext(); )
				addHwSchemasToHwSchemases((HwSchemas)it.next());
	}

	public void addHwSchemasToHwSchemases(HwSchemas element) {
		if( !this.hwSchemases.contains(element) ) {
			this.hwSchemases.add(element);
		}
	}



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof HWConfiguration) ) return false;
		 HWConfiguration castOther = ( HWConfiguration ) other;

		 return ( (this.getConfiguration()==castOther.getConfiguration()) || ( this.getConfiguration()!=null && castOther.getConfiguration()!=null && this.getConfiguration().equals(castOther.getConfiguration()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getConfiguration() == null ? 0 : this.getConfiguration().hashCode() );
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         return result;
   }


}


