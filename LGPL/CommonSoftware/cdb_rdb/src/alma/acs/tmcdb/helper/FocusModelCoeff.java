package alma.acs.tmcdb;
// Generated Jun 5, 2017 7:15:51 PM by Hibernate Tools 4.3.1.Final


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * FocusModelCoeff generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name="`FOCUSMODELCOEFF`"
    , uniqueConstraints =  @UniqueConstraint(columnNames={"`FOCUSMODELID`", "`COEFFNAME`"})
)
public class FocusModelCoeff extends alma.acs.tmcdb.translator.TmcdbObject implements java.io.Serializable {


     protected Integer focusModelCoeffId;
     protected FocusModel focusModel;
     protected String coeffName;
     protected Double coeffValue;
     private Set<FocusModelCoeffOffset> focusModelCoeffOffsets = new HashSet<FocusModelCoeffOffset>(0);

    public FocusModelCoeff() {
    }
   
    @Id @GeneratedValue(generator="generator")
    @GenericGenerator(name="generator", strategy="native",
       parameters = {@Parameter(name="sequence", value="FocusMC_seq")}
	)

    
    @Column(name="`FOCUSMODELCOEFFID`", unique=true, nullable=false)
    public Integer getFocusModelCoeffId() {
        return this.focusModelCoeffId;
    }
    
    public void setFocusModelCoeffId(Integer focusModelCoeffId) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("focusModelCoeffId", this.focusModelCoeffId, this.focusModelCoeffId = focusModelCoeffId);
        else
            this.focusModelCoeffId = focusModelCoeffId;
    }


@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="`FOCUSMODELID`", nullable=false)
    public FocusModel getFocusModel() {
        return this.focusModel;
    }
    
    public void setFocusModel(FocusModel focusModel) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("focusModel", this.focusModel, this.focusModel = focusModel);
        else
            this.focusModel = focusModel;
    }


    
    @Column(name="`COEFFNAME`", nullable=false, length=128)
    public String getCoeffName() {
        return this.coeffName;
    }
    
    public void setCoeffName(String coeffName) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("coeffName", this.coeffName, this.coeffName = coeffName);
        else
            this.coeffName = coeffName;
    }


    
    @Column(name="`COEFFVALUE`", nullable=false, precision=64, scale=0)
    public Double getCoeffValue() {
        return this.coeffValue;
    }
    
    public void setCoeffValue(Double coeffValue) {    
        if( propertyChangeSupport != null )
            propertyChangeSupport.firePropertyChange("coeffValue", this.coeffValue, this.coeffValue = coeffValue);
        else
            this.coeffValue = coeffValue;
    }


@OneToMany(fetch=FetchType.LAZY, mappedBy="focusModelCoeff")
    public Set<FocusModelCoeffOffset> getFocusModelCoeffOffsets() {
        return this.focusModelCoeffOffsets;
    }
    
    public void setFocusModelCoeffOffsets(Set<FocusModelCoeffOffset> focusModelCoeffOffsets) {    
    	this.focusModelCoeffOffsets = focusModelCoeffOffsets;
    }

	public void addFocusModelCoeffOffsets(Set<FocusModelCoeffOffset> elements) {
		if( this.focusModelCoeffOffsets != null )
			for(Iterator<FocusModelCoeffOffset> it = elements.iterator(); it.hasNext(); )
				addFocusModelCoeffOffsetToFocusModelCoeffOffsets((FocusModelCoeffOffset)it.next());
	}

	public void addFocusModelCoeffOffsetToFocusModelCoeffOffsets(FocusModelCoeffOffset element) {
		if( !this.focusModelCoeffOffsets.contains(element) ) {
			this.focusModelCoeffOffsets.add(element);
		}
	}



   public boolean equalsContent(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof FocusModelCoeff) ) return false;
		 FocusModelCoeff castOther = ( FocusModelCoeff ) other;

		 return ( (this.getFocusModel()==castOther.getFocusModel()) || ( this.getFocusModel()!=null && castOther.getFocusModel()!=null && this.getFocusModel().equals(castOther.getFocusModel()) ) )
 && ( (this.getCoeffName()==castOther.getCoeffName()) || ( this.getCoeffName()!=null && castOther.getCoeffName()!=null && this.getCoeffName().equals(castOther.getCoeffName()) ) );
   }

   public int hashCodeContent() {
         int result = 17;

         
         result = 37 * result + ( getFocusModel() == null ? 0 : this.getFocusModel().hashCode() );
         result = 37 * result + ( getCoeffName() == null ? 0 : this.getCoeffName().hashCode() );
         
         
         return result;
   }


}


