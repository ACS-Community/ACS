#ifndef _LAMP_IDL_
#define _LAMP_IDL_

/*******************************************************************************
*    ALMA - Atacama Large Millimiter Array
*    (c) European Southern Observatory, 2002
*    Copyright by ESO (in the framework of the ALMA collaboration)
*    and Cosylab 2002, All rights reserved
*
*    This library is free software; you can redistribute it and/or
*    modify it under the terms of the GNU Lesser General Public
*    License as published by the Free Software Foundation; either
*    version 2.1 of the License, or (at your option) any later version.
*
*    This library is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*    Lesser General Public License for more details.
*
*    You should have received a copy of the GNU Lesser General Public
*    License along with this library; if not, write to the Free Software
*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
*
*
* "@(#) $Id: acsexmplLamp.idl,v 1.83 2004/01/27 21:13:23 dfugate Exp $"
*
* who       when      what
* --------  --------  ----------------------------------------------
*/

#include <baci.idl>

#pragma prefix "alma"

/** @file acsexmplLamp.idl
 *  Lamp's IDL File
 */

module acsexmplLamp 
{
    /** @interface Lamp
     *  Interface Lamp is a very simple interface which uses only 
     *  asynchronous methods.
     */
    interface Lamp : ACS::CharacteristicComponent 
	{
	/** 
	 *  Turns the lamp on asynchronously. That is, we are notified 
	 *  by the callback when the method really completes.
	 *  @param cb callback when the light has been turned on.
	 *  @param desc is used to negotiate timeouts between client and sever.
	 *  See the BACI specifications for more details.
	 *  @return void
	 *  @htmlonly
	 *  <br><hr>
	 *  @endhtmlonly
	 */
	void on(in ACS::CBvoid cb, in ACS::CBDescIn desc);
	
	/** 
	 *  Turns the lamp off asynchronously. That is, we are notified 
	 *  by the callback when the method really completes.
	 *  @param cb callback when the light has been turned off.
	 *  @param desc is used to negotiate timeouts between client and sever.
	 *  See the BACI specifications for more details.
	 *  @return void
	 *  @htmlonly
	 *  <br><hr>
	 *  @endhtmlonly
	 */
	void off(in ACS::CBvoid cb, in ACS::CBDescIn desc);
	
	/** This property is the brightness of the lamp.
	 */
	readonly attribute ACS::RWdouble brightness;
	};
};

#endif
