#*******************************************************************************
# E.S.O. - VLT project
#
# "@(#) $Id: compat.FEB1995.config,v 1.23 2001/06/20 11:14:28 vltsccm Exp $"
#
# who       when      what
# --------  --------  ----------------------------------------------
# eallaert  01/03/95  created
#

#************************************************************************
#   NAME
#   compat.tcl - Configuration file to check for incompatibilies of VLT SW 
#       	 release FEB 95 with respect to NOV 94 release.
#
#   DESCRIPTION
#   This files contains a number of entries, with each entry describing a single
#   incompatibilitiy.  Each entry is structured as a keyed list (see TclX)
#   The format of each entry is:
#      1. Opening braces
#      2. A number of sublists each containing a key and a value;
#      3. Closing braces
#   Being keyed lists, the exact order of the sublists (see 2.) is irrelevant.
#   The keys are:
#   TYPE : tells whether the incompatibility stems from the "filename" or 
#          from the "content" of the file
#   PATTERN : glob-style pattern to match
#   LEVEL : classification of incompatibility.  WARNING means potentially
#           incompatible, SEVERE means a hard incompatibility.
#   HELP : a short explanatory help text
#
#   Comment or blank lines can appear anywhere outside the braces enclosing one
#   entry (1. and 3.)
#------------------------------------------------------------------------

#   *********
#   *       *
#   *  LCC  *
#   *       *
#   *********
#
# 1. CDT files should all be verified
{
{TYPE {filename}}
{PATTERN {*.cdt}}
{LEVEL {SEVERE}}
{HELP {the CDT has a new syntax}}
}

# 2. cmdInit has an additional parameter
{
{TYPE {content}}
{PATTERN {cmdInit}}
{LEVEL {SEVERE}}
{HELP {cmdInit has an additional argument}}
}

# 3. DeviceFile has changed
{
{TYPE {filename}}
{PATTERN {devicesFile}}
{LEVEL {SEVERE}}
{HELP {format has changed - table has 1 field more}}
}

# 4. evtConfig and evtConfigAbnormal have changed
{
{TYPE {content}}
{PATTERN {evtConfig}}
{LEVEL {SEVERE}}
{HELP {evtConfig and evtConfigAbnormal arg list changed}}
}

# 5. evtRequestAlarm is obsolete
{
{TYPE {content}}
{PATTERN {evtRequestAlarm}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtAttach}}
}

# 6. evtRequestOnChange is obsolete
{
{TYPE {content}}
{PATTERN {evtRequestOnChange}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtAttach}}
}

# 7. evtRequestPeriodic is obsolete
{
{TYPE {content}}
{PATTERN {evtRequestPeriodic}}
{LEVEL {SEVERE}}
{HELP {is now obsolete}}
}

# 8. evtAddAlarm is obsolete
{
{TYPE {content}}
{PATTERN {evtAddAlarm}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtAttachAlarm}}
}

# 9. evtAddOnChange is obsolete
{
{TYPE {content}}
{PATTERN {evtAddOnChange}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtAttach}}
}

# 10. evtAddPeriodic is obsolete
{
{TYPE {content}}
{PATTERN {evtAddPeriodic}}
{LEVEL {SEVERE}}
{HELP {is now obsolete}}
}

# 11. evtDeleteAlarm is obsolete
{
{TYPE {content}}
{PATTERN {evtDeleteAlarm}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtDetach}}
}

# 12. evtDeleteOnChange is obsolete
{
{TYPE {content}}
{PATTERN {evtDeleteOnChange}}
{LEVEL {SEVERE}}
{HELP {is now obsolete - use evtDetach}}
}

# 13. evtDeletePeriodic is obsolete
{
{TYPE {content}}
{PATTERN {evtDeletePeriodic}}
{LEVEL {SEVERE}}
{HELP {is now obsolete}}
}

# 14. dbGetAttrNames
{
{TYPE {content}}
{PATTERN {dbGetAttrNames}}
{LEVEL {WARNING}}
{HELP {memory allocation scheme changed on LCU}}
}

# 15. dbGetParent for LCC
{
{TYPE {content}}
{PATTERN {dbGetParent}}
{LEVEL {SEVERE}}
{HELP {has one paremeter less on LCC}}
}

# 16. dbGetFamily
{
{TYPE {content}}
{PATTERN {dbGetFamily}}
{LEVEL {WARNING}}
{HELP {memory allocation scheme changed on LCU}}
}

# 17. dbGetFieldNames
{
{TYPE {content}}
{PATTERN {dbGetFieldNames}}
{LEVEL {WARNING}}
{HELP {memory allocation scheme changed on LCU}}
}

# 18. lccGetStatus
{
{TYPE {content}}
{PATTERN {lccGetStatus}}
{LEVEL {SEVERE}}
{HELP {has one additional parameter}}
}

# 19. logDisAnalog
{
{TYPE {content}}
{PATTERN {logDisAnalog}}
{LEVEL {SEVERE}}
{HELP {has additional parameters}}
}

# 20. logDisDigital
{
{TYPE {content}}
{PATTERN {logDisDigital}}
{LEVEL {SEVERE}}
{HELP {has additional parameters}}
}

# 21. logDisReadDb
{
{TYPE {content}}
{PATTERN {logDisReadDb}}
{LEVEL {SEVERE}}
{HELP {has additional parameters}}
}

# 22. logDisWritedDb
{
{TYPE {content}}
{PATTERN {logDisWriteDb}}
{LEVEL {SEVERE}}
{HELP {has additional parameters}}
}

# 23. timerSendCommand
{
{TYPE {content}}
{PATTERN {timerSendCommand}}
{LEVEL {SEVERE}}
{HELP {has one additional parameter}}
}

# 24. timerSetInterrupt
{
{TYPE {content}}
{PATTERN {timerSetInterrupt}}
{LEVEL {SEVERE}}
{HELP {has one additional parameter}}
}

# 25. timerScheduleTask is obsolete
{
{TYPE {content}}
{PATTERN {timerScheduleTask}}
{LEVEL {SEVERE}}
{HELP {obsolete on LCC, replaced by timerScheduleProcess on CCS}}
}

#   *********
#   *       *
#   *  CCS  *
#   *       *
#   *********
#
# 1. msgRecvMsg
{
{TYPE {content}}
{PATTERN {msgRecvMsg}}
{LEVEL {WARNING}}
{HELP {argument msgHEADER must be initialized (CCS only)}}
}

# 2. msgSetFilter
{
{TYPE {content}}
{PATTERN {msgSetFilter}}
{LEVEL {SEVERE}}
{HELP {function call requires 2 additional arguments}}
}

# 3. libuifBasicClass.tcl
{
{TYPE {content}}
{PATTERN {libuifBasicClass.tcl}}
{LEVEL {SEVERE}}
{HELP {is merged into other uif library}}
}

# 4. cmdSetup
{
{TYPE {content}}
{PATTERN {cmdSetup}}
{LEVEL {WARNING}}
{HELP {option -p and -s do not support absolute filenames}}
}

# 4. evtEVENT_ID
{
{TYPE {content}}
{PATTERN {evtEVENT_ID}}
{LEVEL {WARNING}}
{HELP {element 'filter' renamed to 'reserved'}}
}

# 5. /usr/local/bin/sequencer
{
{TYPE {content}}
{PATTERN {/usr/local/bin/sequencer}}
{LEVEL {SEVERE}}
{HELP {path hardcoding not allowed}}
}

#   *********
#   *       *
#   *  MCM  *
#   *       *
#   *********
#
# 1. caiGetFunctions
{
{TYPE {content}}
{PATTERN {caiGetFunctions}}
{LEVEL {SEVERE}}
{HELP {requires one argument less}}
}

# 2. caiGetAttributes
{
{TYPE {content}}
{PATTERN {caiGetAttributes}}
{LEVEL {SEVERE}}
{HELP {requires one argument less}}
}

#   ***************
#   *             *
#   *  Sequencer  *
#   *             *
#   ***************
#
# 1. seq_msgSendCommand
{
{TYPE {content}}
{PATTERN {seq_msgSendCommand}}
{LEVEL {SEVERE}}
{HELP {order of arguments changed}}
}

# 2. seq_msgSendCheck
{
{TYPE {content}}
{PATTERN {seq_msgCheck}}
{LEVEL {WARNING}}
{HELP {second form of command changed order of arguments}}
}

# 3. seq_dbReadSymbolic
{
{TYPE {content}}
{PATTERN {seq_dbReadSymbolic}}
{LEVEL {WARNING}}
{HELP {some cases no longer treated as list elements}}
}

# 4. seq_dbWriteSymbolic
{
{TYPE {content}}
{PATTERN {seq_dbWriteSymbolic}}
{LEVEL {WARNING}}
{HELP {attrInfo must be more specific in some cases}}
}

# 5. seq_dbGetAttrinfo
{
{TYPE {content}}
{PATTERN {seq_dbGetAttrinfo}}
{LEVEL {WARNING}}
{HELP {returns values only for specified TABLE-fields}}
}

#   *********
#   *       *
#   *  dxf  *
#   *       *
#   *********
#
# 1. dxfSendData
{
{TYPE {content}}
{PATTERN {dxfSendData}}
{LEVEL {SEVERE}}
{HELP {number and meaning of arguments changed}}
}

# 2. dxfRecvData
{
{TYPE {content}}
{PATTERN {dxfRecvData}}
{LEVEL {SEVERE}}
{HELP {number and meaning of arguments changed}}
}

# 3. dxfCompress
{
{TYPE {content}}
{PATTERN {dxfCompress}}
{LEVEL {SEVERE}}
{HELP {has one more argument}}
}

# 4. dxfDecompress
{
{TYPE {content}}
{PATTERN {dxfDecompress}}
{LEVEL {SEVERE}}
{HELP {has one more argument}}
}

# 5. dxfORGCALL
{
{TYPE {content}}
{PATTERN {dxfORGCALL}}
{LEVEL {SEVERE}}
{HELP {2 elements changed from pointer to structure}}
}

