#-*-Tcl-*-
#******************************************************************************
# E.S.O. - VLT project
#
# "@(#) $Id: compat.DEC1995.config,v 1.23 2001/06/20 11:14:28 vltsccm Exp $"
#
# who       when       what
# --------  ---------- ----------------------------------------------
# ssandroc  06.11.1995 created
# gfilippi  21.11.1995 "sequencer" is now either "seqWish" or "seqSh"
# gfilippi  21.11.1995 alarm declaration macros have one additional parameter
#

#************************************************************************
#   NAME
#   compat.config - Configuration file to check for incompatibilies 
#       	    due to VLTROOT/VLTDATA conversion
#
#   DESCRIPTION
#   This files contains a number of entries, with each entry describing a single
#   incompatibilitiy.  Each entry is structured as a keyed list (see TclX)
#   The format of each entry is:
#      1. Opening braces
#      2. A number of sublists each containing a key and a value;
#      3. Closing braces
#   Being keyed lists, the exact order of the sublists (see 2.) is irrelevant.
#   The keys are:
#   TYPE : tells whether the incompatibility stems from the "filename" or 
#          from the "content" of the file
#   PATTERN : glob-style pattern to match.  No need to use "*" if TYPE is
#             "content" -- the asterisks are added by compat.tcl in this case
#   LEVEL : classification of incompatibility.  WARNING means potentially
#           incompatible, SEVERE means a hard incompatibility.
#   HELP : a short explanatory help text
#
#   Comment or blank lines can appear anywhere outside the braces enclosing one
#   entry (1. and 3.)
#------------------------------------------------------------------------
#   ***********************
#   *                     *
#   *  VLTROOT & VLTDATA  *
#   *                     *
#   ***********************
#
#   New directory structure

{
{TYPE {filename}}
{PATTERN {*/ENVIRONMENTS}}
{LEVEL {SEVERE}}
{HELP {ENVIRONMENTS directory does not exist anymore. 
	Use new VLTDATA structure instead}}
}

{
{TYPE {content}}
{PATTERN {ENVIRONMENTS}}
{LEVEL {SEVERE}}
{HELP {ENVIRONMENTS directory does not exist anymore. 
	Use new VLTDATA structure instead}}
}

{
{TYPE {filename}}
{PATTERN {*/BOOT}}
{LEVEL {SEVERE}}
{HELP {BOOT directory does not exist anymore. 
	Use new VLTDATA structure instead}}
}

{
{TYPE {content}}
{PATTERN {vw/BOOT}}
{LEVEL {SEVERE}}
{HELP {This directory does not exist anymore. 
	Use new VLTDATA structure instead}}
}

{
{TYPE {content}}
{PATTERN {vw/bin}}
{LEVEL {SEVERE}}
{HELP {This directory has been extended by CPU-specific subdirs. 
	Be sure to use proper CPU path in connection with it.}}
}

{
{TYPE {content}}
{PATTERN {BOOTROOT}}
{LEVEL {WARNING}}
{HELP {Structure under BOOTROOT has changed, 
	the use of BOOTROOT is also not recommended!
	Check use of BOOTHOME instead.}}
}

{
{TYPE {content}}
{PATTERN {VXROOT}}
{LEVEL {WARNING}}
{HELP {Be sure to use proper BSP path in connection with VXROOT}}
}


#   ***************
#   *             *
#   *  Sequencer  *
#   *             *
#   ***************
#
#   "sequencer" is now either "seqWish" or "seqSh"
{
{TYPE {content}}
{PATTERN {sequencer}}
{LEVEL {SEVERE}}
{HELP {sequencer does not exist anymore
            Use: seqWish for application with graphical user interface
                 seqSh   for application without GUI }}
}

#   ***************
#   *             *
#   *  CCS/alrm   *
#   *             *
#   ***************
#   (from Bruno) alarm declaration macros have one additional parameter (tm=timeout)
# 
#      //*   Discrete alarms:
#      //*   alrmDiscrete2st( name, pv, sev1, val1, sev2, val2, sc, tm )     
#      //*   alrmDiscrete3st( name, pv, sev1, val1, sev2, val2, sev3, val3, sc, tm )  
#      //*   alrmDiscrete4st( name, pv, sev1, val1, sev2, val2, sev3, val3, sev4, val4, sc, tm )  
#      //*   alrmDiscrete5st( name, pv, sev1, val1, sev2, val2, sev3, val3, sev4, val4, sev5, val5, sc, tm ) 
#      //*   
#      //*   Analog alarms: 
#      //*   alrmAnalog2st( name, pv, sev0, lim,  sev1, hys, hs, sc, tm)     
#      //*   alrmAnalog3st( name, pv, sev0, lim2, sev1, lim1, sev2, hys, hs, sc, tm)     
#      //*   alrmAnalog4st( name, pv, sev0, lim3, sev1, lim2, sev2, lim1, sev3, hys, hs, sc, tm)     
#      //*   alrmAnalog5st( name, pv, sev0, lim4, sev1, lim3, sev2, lim2, sev3, lim1, sev4, hys, hs, sc, tm) 
# 
#   alarm declaration macros could be used in "dbl" files.
# 
{
{TYPE {content}}
{PATTERN {alrmDiscrete}}
{LEVEL {SEVERE}}
{HELP {alrmDiscrete<n>st macros have one additional parameter now.
              Add timeout as last parameter. }}
}

{
{TYPE {content}}
{PATTERN {alrmAnalog}}
{LEVEL {SEVERE}}
{HELP {alarmAnalog<n>st  macros have one additional parameter now.
              Add timeout as last parameter. }}
}

