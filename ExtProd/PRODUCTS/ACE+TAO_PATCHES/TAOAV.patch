diff -Naur TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/AVStreams_i.cpp TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/AVStreams_i.cpp
--- TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/AVStreams_i.cpp	2009-04-23 08:32:53.000000000 +0000
+++ TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/AVStreams_i.cpp	2010-05-31 06:46:57.000000000 +0000
@@ -108,10 +108,18 @@
             }
         }
     }
+  catch(AVStreams::noSuchFlow& ex)
+      {
+      throw; //ACS mod 2007-08
+      }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_Basic_StreamCtrl::stop");
-      return;
+    ex._tao_print_exception ("TAO_Basic_StreamCtrl::stop");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_Basic_StreamCtrl::stop - unknown exception\n");
     }
 }
 
@@ -151,10 +159,18 @@
             }
         }
     }
+ catch(AVStreams::noSuchFlow& ex)
+      {
+      throw; //ACS mod 2007-08
+      }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_Basic_StreamCtrl::start");
-      return;
+    ex._tao_print_exception ("TAO_Basic_StreamCtrl::start");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_Basic_StreamCtrl::start - unknown exception\n");
     }
 }
 
@@ -435,10 +451,18 @@
           entry->int_id_.sep_->stop (flow_spec);
         }
     }
+  catch(AVStreams::noSuchFlow& ex)
+    {
+    throw; //ACS mod 2007-08
+    }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_Basic_StreamCtrl::stop");
-      return;
+    ex._tao_print_exception ("TAO_StreamCtrl::stop");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_StreamCtrl::stop - unknow exception\n");
     }
 }
 
@@ -465,10 +489,18 @@
           entry->int_id_.sep_->start (flow_spec);
         }
     }
+ catch(AVStreams::noSuchFlow& ex)
+    {
+    throw; //ACS mod 2007-08
+    }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_StreamCtrl::start");
-      return;
+    ex._tao_print_exception ("TAO_StreamCtrl::start");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_StreamCtrl::start - unknow exception\n");
     }
 }
 
@@ -2273,6 +2305,7 @@
         throw AVStreams::streamOpFailed ();
       // redefine the "Flows" property
       AVStreams::flowSpec new_flows (this->flows_.length ());
+      new_flows.length(this->flows_.length ());
       for (u_int i=0, j=0 ; i <this->flows_.length (); i++)
         if (ACE_OS::strcmp (flow_name, this->flows_[i]) != 0)
           new_flows[j++] = this->flows_[i];
@@ -3367,10 +3400,18 @@
           (*consumer_begin)->stop ();
         }
     }
+ catch(AVStreams::noSuchFlow& ex)
+    {
+    throw; //ACS mod 2007-08
+    }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_FlowConnection::stop");
-      return;
+    ex._tao_print_exception ("TAO_FlowConnection::stop");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_FlowConnection::stop - unknown exception\n");
     }
 }
 
@@ -3397,10 +3438,18 @@
           (*producer_begin)->start ();
         }
     }
+ catch(AVStreams::noSuchFlow& ex)
+    {
+    throw; //ACS mod 2007-08
+    }
   catch (const CORBA::Exception& ex)
     {
-      ex._tao_print_exception ("TAO_FlowConnection::start");
-      return;
+    ex._tao_print_exception ("TAO_FlowConnection::start");
+    throw;  //ACS mod 2007-08
+    }
+  catch(...)
+    {
+      printf ("TAO_FlowConnection::start - unknown exception\n");
     }
 }
 
diff -Naur TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.cpp TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.cpp
--- TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.cpp	2008-10-06 18:20:19.000000000 +0000
+++ TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.cpp	2010-05-31 11:14:54.000000000 +0000
@@ -210,7 +210,7 @@
   if (n == -1)
     ACE_ERROR_RETURN ((LM_ERROR,"TAO_AV_TCP_Flow_Handler::handle_input recv failed\n"),-1);
   if (n == 0)
-    ACE_ERROR_RETURN ((LM_ERROR,"TAO_AV_TCP_Flow_Handler::handle_input connection closed\n"),-1);
+    ACE_ERROR_RETURN ((LM_DEBUG,"TAO_AV_TCP_Flow_Handler::handle_input connection closed\n"),-1);
   this->frame_.wr_ptr (this->frame_.rd_ptr () + n);
 
   return this->callback_->receive_frame (&this->frame_);
@@ -656,6 +656,19 @@
                       -1);
 #endif /* TCP_NODELAY */
 
+//begin: BJE: (allign the sizes of the buffers)
+  int bufSize=BUFSIZ;
+  int s= sizeof (bufSize);
+  if(  this->peer ().get_option (SOL_SOCKET, /*IPPROTO_TCP,*/
+				  SO_RCVBUF,
+                                (void *) &bufSize,&s
+			     ) == -1)
+       bufSize=BUFSIZ;
+
+    
+  ((TAO_AV_TCP_Object*)(this->protocol_object_))->get_message_block().size (bufSize);
+//end: BJE
+
   // Called by the <Strategy_Acceptor> when the handler is completely
   // connected.
   ACE_INET_Addr addr;
diff -Naur TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.h TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.h
--- TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.h	2008-09-29 08:02:27.000000000 +0000
+++ TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/AV/TCP.h	2010-05-31 11:19:12.000000000 +0000
@@ -248,6 +248,8 @@
   /// end the stream.
   virtual int destroy (void);
 
+  ACE_Message_Block& get_message_block() { return frame_; }
+
 private:
   /// Pre-allocated memory to receive the data...
   ACE_Message_Block frame_;
