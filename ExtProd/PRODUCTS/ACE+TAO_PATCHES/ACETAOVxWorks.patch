diff -Naur TAO.org/ACE_wrappers/ace/os_include/os_limits.h TAO/ACE_wrappers/ace/os_include/os_limits.h
--- TAO.org/ACE_wrappers/ace/os_include/os_limits.h	1970-04-06 13:51:11.000000000 +0100
+++ TAO/ACE_wrappers/ace/os_include/os_limits.h	2006-01-11 10:31:37.000000000 +0100
@@ -29,6 +29,9 @@
 
 #if !defined (ACE_LACKS_LIMITS_H)
 # include /**/ <limits.h>
+#if defined (VXWORKS)
+# include /**/ <time.h> // _POSIX_TIMER_MAX
+#endif /* VXWORKS */
 #endif /* !ACE_LACKS_LIMITS_H */
 
 #if !defined (ACE_LACKS_PARAM_H)
@@ -121,7 +124,7 @@
 
   // The maximum number of concurrent timers per process.
 # if !defined (_POSIX_TIMER_MAX)
-#   define _POSIX_TIMER_MAX 44
+ #   define _POSIX_TIMER_MAX 44
 # endif /* _POSIX_TIMER_MAX */
 
 #ifdef __cplusplus
diff -Naur TAO.org/ACE_wrappers/ace/OS_main.cpp TAO/ACE_wrappers/ace/OS_main.cpp
--- TAO.org/ACE_wrappers/ace/OS_main.cpp	2003-11-08 05:15:52.000000000 +0100
+++ TAO/ACE_wrappers/ace/OS_main.cpp	2006-01-11 10:31:37.000000000 +0100
@@ -26,8 +26,12 @@
 
 #  if !defined (ACE_WIN32)
 
+#    if defined (VXWORKS)
+    int ace_main_i (int, char *[]) {};
+#    else
 /* forward declaration */
 extern int ace_main_i (int, char *[]);
+#    endif
 
 #    if defined (ACE_PSOSIM)
 // PSOSIM root lacks the standard argc, argv command line parameters,
diff -Naur TAO.org/ACE_wrappers/ace/OS_NS_stdlib.cpp TAO/ACE_wrappers/ace/OS_NS_stdlib.cpp
--- TAO.org/ACE_wrappers/ace/OS_NS_stdlib.cpp	1970-05-05 15:23:14.000000000 +0100
+++ TAO/ACE_wrappers/ace/OS_NS_stdlib.cpp	2006-01-11 10:31:37.000000000 +0100
@@ -379,6 +379,10 @@
 	    }
 	  
 	  // Check if current path is a link
+#if defined (VXWORKS)
+#define	S_ISLNK(mode)	((mode & S_IFMT) == S_IFLNK)
+#define MAXSYMLINKS  _POSIX_LINK_MAX  // ? I do not know if it is correct
+#endif
 	  if (S_ISLNK (st.st_mode))
 	    {
 	      if (++nlinks > MAXSYMLINKS)
diff -Naur TAO.org/ACE_wrappers/ace/OS_NS_stdlib.h TAO/ACE_wrappers/ace/OS_NS_stdlib.h
--- TAO.org/ACE_wrappers/ace/OS_NS_stdlib.h	1970-05-10 08:32:52.000000000 +0100
+++ TAO/ACE_wrappers/ace/OS_NS_stdlib.h	2006-01-11 10:31:37.000000000 +0100
@@ -28,6 +28,10 @@
 #include "ace/os_include/os_stdlib.h"
 #include "ace/ACE_export.h"
 
+#if defined (VXWORKS)
+#   include <netinet/tcp.h> // TCP_NODELAY for VxWorks
+#endif
+
 #if defined (ACE_EXPORT_MACRO)
 #  undef ACE_EXPORT_MACRO
 #endif
diff -Naur TAO.org/ACE_wrappers/ace/OS_NS_Thread.inl TAO/ACE_wrappers/ace/OS_NS_Thread.inl
--- TAO.org/ACE_wrappers/ace/OS_NS_Thread.inl	1970-06-23 01:26:20.000000000 +0100
+++ TAO/ACE_wrappers/ace/OS_NS_Thread.inl	2006-01-11 10:31:37.000000000 +0100
@@ -83,12 +83,13 @@
     if (0 == taskIdCurrent->ACE_VXWORKS_SPARE)
       {
         taskIdCurrent->ACE_VXWORKS_SPARE =
-          reinterpret_cast<int> (new void *[ACE_TSS_THREAD_KEYS_MAX]);
+	    ACE_reinterpret_cast (int, new void *[ACE_TSS_THREAD_KEYS_MAX]);
+//          reinterpret_cast<int> (new void *[ACE_TSS_THREAD_KEYS_MAX]);
 
         // Zero the entire TSS array.  Do it manually instead of using
         // memset, for optimum speed.  Though, memset may be faster :-)
         void **tss_base_p =
-          reinterpret_cast> (void **> (taskIdCurrent->ACE_VXWORKS_SPARE);
+          ACE_reinterpret_cast (void **, taskIdCurrent->ACE_VXWORKS_SPARE);
         for (u_int i = 0; i < ACE_TSS_THREAD_KEYS_MAX; ++i, ++tss_base_p)
           {
             *tss_base_p = 0;
@@ -668,7 +669,7 @@
     {
 #   if defined (ACE_HAS_PTHREADS_DRAFT7) || defined (ACE_HAS_PTHREADS_STD)
 #     if defined (_POSIX_THREAD_PROCESS_SHARED) && !defined (ACE_LACKS_MUTEXATTR_PSHARED)
-      ACE_ADAPT_RETVAL (::pthread_mutexattr_setpshared (attributes,
+      (void)ACE_ADAPT_RETVAL (::pthread_mutexattr_setpshared (attributes,
                                                         lock_scope),
                         result);
 #     endif /* _POSIX_THREAD_PROCESS_SHARED && !ACE_LACKS_MUTEXATTR_PSHARED */
diff -Naur TAO.org/ACE_wrappers/ace/Time_Value.h TAO/ACE_wrappers/ace/Time_Value.h
--- TAO.org/ACE_wrappers/ace/Time_Value.h	1970-07-18 17:40:26.000000000 +0100
+++ TAO/ACE_wrappers/ace/Time_Value.h	2006-01-11 10:31:37.000000000 +0100
@@ -23,14 +23,24 @@
 
 
 # if !defined (ACE_HAS_WINCE) && !defined (ACE_PSOS_DIAB_MIPS)
-#   include "ace/os_include/sys/os_time.h"
+#   include "ace/os_include/os_time.h"
 #   if defined (__Lynx__)
 #     include /**/ <st.h>
 #     include /**/ <sem.h>
 #   endif /* __Lynx__ */
-#   if defined (VXWORKS)
-#     include /**/ <sys/times.h>
-#   endif /* VXWORKS */
+
+#   if defined (ACE_LACKS_SYSTIME_H)
+#     if defined (VXWORKS)
+        // Need some definitions for the timespec structure
+        // Seems like this should be encapsulated inside ace/os_include/os_time.h
+        // since that include file provides full support for these features
+        // on most other platforms.
+//#       include /**/ "ace/os_include/sys/os_time.h"
+#       include /**/ "ace/os_include/sys/os_times.h"
+#     else
+#       include /**/ "ace/os_include/sys/os_time.h"
+#     endif /* VXWORKS */
+#   endif /* ACE_LACKS_SYSTIME_H */
 # endif /* ACE_HAS_WINCE ACE_PSOS_DIAB_MIPS */
 
 // HP-UX 10.20 doesn't define timespec_t - it defined struct timespec.
