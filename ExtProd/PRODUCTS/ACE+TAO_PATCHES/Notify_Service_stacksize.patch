diff -Naur TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/Object.cpp TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/Object.cpp
--- TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/Object.cpp	2013-04-12 22:47:02.000000000 +0000
+++ TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/Object.cpp	2014-12-10 08:40:09.000000000 +0000
@@ -251,6 +251,7 @@
     throw CORBA::INTERNAL ();
 
   // Apply the appropriate concurrency QoS
+  const_cast<NotifyExt::ThreadPoolParams*>(&new_qos_properties.thread_pool().value())->stacksize = 256 * 1024;
   if (new_qos_properties.thread_pool ().is_valid ())
   {
     if (new_qos_properties.thread_pool ().value ().static_threads == 0)
diff -Naur TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp
--- TAO.org/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp	2013-04-12 22:47:02.000000000 +0000
+++ TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp	2014-12-11 10:02:07.000000000 +0000
@@ -77,7 +77,7 @@
   if (this->ACE_Task <ACE_NULL_SYNCH>::activate (flags,
                                                  tp_params.static_threads,
                                                  0,
-                                                 ACE_THR_PRI_OTHER_DEF) == -1)
+                                                 ACE_THR_PRI_OTHER_DEF, -1, 0, 0, 0, (size_t*)&tp_params.stacksize) == -1)
     {
       // Undo the ref counts on error
       for ( CORBA::ULong i = 0; i < tp_params.static_threads; ++i )
