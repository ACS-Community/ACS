diff -Naur TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp TAO/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp
--- TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp	2010-07-15 13:38:43.000000000 +0000
+++ TAO/ACE_wrappers/TAO/TAO_IDL/be/be_codegen.cpp	2010-08-04 07:47:42.000000000 +0000
@@ -2464,10 +2464,14 @@
         }
     }
 
-  ACE_OS::strcat (macro_name, "_XXXXXX");
-  char * const t = ACE_OS::strstr (macro_name, "XXXXXX");
-
-  this->make_rand_extension (t);
+  // do we have to generate unique guards ?
+  if (be_global->gen_unique_guards ())
+    {
+    ACE_OS::strcat (macro_name, "_XXXXXX");
+    char * const t = ACE_OS::strstr (macro_name, "XXXXXX");
+    
+    this->make_rand_extension (t);
+    }
 
   ACE_OS::strcat (macro_name, suffix);
 
diff -Naur TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_global.cpp TAO/ACE_wrappers/TAO/TAO_IDL/be/be_global.cpp
--- TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_global.cpp	2010-07-15 09:46:03.000000000 +0000
+++ TAO/ACE_wrappers/TAO/TAO_IDL/be/be_global.cpp	2010-08-04 07:47:42.000000000 +0000
@@ -129,6 +129,7 @@
     gen_template_export_ (false),
     gen_ostream_operators_ (false),
     gen_custom_ending_ (true),
+    gen_unique_guards_(true),
     gen_ciao_svnt_ (false),
     gen_ciao_exec_idl_ (false),
     gen_ciao_exec_impl_ (false),
@@ -2265,6 +2266,18 @@
 }
 
 bool
+BE_GlobalData::gen_unique_guards (void) const
+{
+    return this->gen_unique_guards_;
+}
+
+void
+BE_GlobalData::gen_unique_guards (bool val)
+{
+  this->gen_unique_guards_ = val;
+}
+
+bool
 BE_GlobalData::gen_ciao_svnt (void) const
 {
   return this->gen_ciao_svnt_;
@@ -3278,6 +3291,11 @@
             // files from TAO specific include paths.
             be_global->gen_custom_ending (false);
           }
+         else if (av[i][2] == 'g')
+          {
+            // suppress generation of unique guards 
+            be_global->gen_unique_guards (false);
+          }
         else
           {
             ACE_ERROR ((
diff -Naur TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_util.cpp TAO/ACE_wrappers/TAO/TAO_IDL/be/be_util.cpp
--- TAO.org/ACE_wrappers/TAO/TAO_IDL/be/be_util.cpp	2010-07-12 08:21:28.000000000 +0000
+++ TAO/ACE_wrappers/TAO/TAO_IDL/be/be_util.cpp	2010-08-04 08:00:02.000000000 +0000
@@ -814,6 +814,11 @@
     ));
   ACE_DEBUG ((
       LM_DEBUG,
+      ACE_TEXT (" -Sg\t\t\tsuppress generating of unique header guards")
+      ACE_TEXT (" (unique guards are generated by default)\n")
+    ));
+  ACE_DEBUG ((
+      LM_DEBUG,
       ACE_TEXT (" -TS <value>\t\tset tab size for generated files")
       ACE_TEXT (" (default is 2 spaces)\n")
     ));
diff -Naur TAO.org/ACE_wrappers/TAO/TAO_IDL/be_include/be_global.h TAO/ACE_wrappers/TAO/TAO_IDL/be_include/be_global.h
--- TAO.org/ACE_wrappers/TAO/TAO_IDL/be_include/be_global.h	2010-07-15 09:46:03.000000000 +0000
+++ TAO/ACE_wrappers/TAO/TAO_IDL/be_include/be_global.h	2010-08-04 07:47:42.000000000 +0000
@@ -786,6 +786,10 @@
   bool gen_custom_ending (void) const;
   void gen_custom_ending (bool val);
 
+ /// Accessors for the member gen_unique_guards_.
+  bool gen_unique_guards (void) const;
+  void gen_unique_guards (bool val);
+
   /// Accessors for the corresponding members.
   
   bool gen_ciao_svnt (void) const;
@@ -1129,6 +1133,12 @@
    */
   bool gen_custom_ending_;
 
+ /**
+   * True by default, but a command line option can turn this off so
+   * the generated code (header) files will not be proteced by unique guards.
+   */
+  bool gen_unique_guards_;
+
   /// False by default, these flags trigger code generation
   /// formerly done by the CIAO CIDL compiler.
   bool gen_ciao_svnt_;
