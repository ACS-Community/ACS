#! /bin/bash
#*******************************************************************************
# E.S.O. - ALMA project
#
# "@(#) $Id: buildTAO,v 1.22 2006/12/11 19:37:16 bjeram Exp $"
#
# who       when        what
# --------  ----------  ----------------------------------------------
# psivera   2002-08-21  created
# sturolla  2005-10-09  ported to Bourne Shell and added external subroutine to determine OS
#

#************************************************************************
#   NAME
# 
#   SYNOPSIS
# 
#   DESCRIPTION
#
#   FILES
#
#   ENVIRONMENT
#
#   RETURN VALUES
#
#   CAUTIONS
#
#   EXAMPLES
#
#   SEE ALSO
#
#   BUGS     
#
#------------------------------------------------------------------------
#

# Load functions
. standardUtilities
#
# Fetch operating system and release version
#
os_discovery

LOG=buildTAO.log
exec > $LOG 2>&1

date

CURR_DIR=`pwd`
if [ "$OS" = "LINUX" ]
then 
  OSTAG=linux
elif [ "$OS" = "SOLARIS" ]
then
  OSTAG=sun
else
  echo "OS $OS not supported"
  exit -1
fi

echo "Installing ACE/TAO for $OSTAG"
echo 

if [ -d $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO ]
then
  echo $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO directory exists already. I clean it up.
  rm -rf $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO
fi
mkdir $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO


#
# Unpack the tar file
# put the sources under $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO
#
FILE=ACE-5.5.2+TAO-1.5.2
ARCHIVE=`pwd`/../PRODUCTS/$FILE.tar.gz
cd $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO
echo "unpacking the archive"
gzip -cd $ARCHIVE | tar -xf - 
echo "done"
echo ""

#
# Apply patches
#
echo "patching the code"
echo "- ACErelpath.patch"
patch -p1 < $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/ACErelpath.patch
#echo "- ACETAOVxWorks.patch"
#patch -p1 < $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/ACETAOVxWorks.patch
echo "- TAOAV.patch"
patch -p1 < $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/TAOAV.patch
echo "- OmniOrb patch: CosProperty(Service).idl"
cp $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/CosProperty*.idl $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO/ACE_wrappers/TAO/orbsvcs/orbsvcs/
echo "done"
echo ""

#
# Create the build structure
#
echo "running the create_ace_build $OSTAG"
cd ACE_wrappers
bin/create_ace_build $OSTAG
echo "done"
echo ""


#
# Copy the proper ACE/TAO configuration files for the platform
#
echo "copying config.h and platform_macros.GNU"
cp $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/$OSTAG/config.h $ACE_ROOT/ace
cp $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/$OSTAG/platform_macros.GNU $ACE_ROOT/include/makeinclude
chmod oug+r $ACE_ROOT/ace/config.h $ACE_ROOT/include/makeinclude/platform_macros.GNU
echo "done"
echo ""

echo "building ace"
cd $ACE_ROOT/ace ; make
echo "done"
echo ""
echo "building gperf"
cd $ACE_ROOT/apps/gperf ; make
echo "done"
echo ""
echo "building ACEXML"
cd $ACE_ROOT/ACEXML ; make
echo "done"
echo ""
echo "building Kokyu"
cd $ACE_ROOT/Kokyu ; make
echo "done"
echo ""

# check that LD_LIBRARY_PATH contains $ACE_ROOT/ace

# set INSLIB=../../ace ...
#cd $ACE_ROOT/TAO/tao ; make INSLIB=../../ace
#cd $ACE_ROOT/TAO/TAO_IDL ; make INSLIB=../../ace
#cd $ACE_ROOT/TAO/orbsvcs/orbsvcs ; make INSLIB=../../ace
# ... or not
echo "building tao"
echo "building TAO_IDL"
cd $ACE_ROOT/TAO/TAO_IDL ; make 
echo "done"
echo ""

cd $ACE_ROOT/TAO/tao ; make 
echo "done"
echo ""

echo "building orbsvcs"
cd $ACE_ROOT/TAO/orbsvcs; make 
echo "done"
echo ""

echo "building utilities"
cd $ACE_ROOT/TAO/utils; make 
echo "done"
echo ""


#
# strip for saving space
# WARNING: on Solaris, do this for the sun directory only
#          not for vxworks for not to corrupt the files
#
echo "stripping the code under $OSTAG"

cd $ACE_ROOT
find . -exec strip {} \; > /dev/null 2>&1
echo "stripping done"

echo "build of ACE/TAO for $OSTAG finished"

#
# Compilation for VxWorks: 
#

if [ ! "X$WIND_BASE" = X ]
then
    LINK_DEST=$OSTAG
    OSTAG=vxworks
    ACE_ROOT_VW=$ACE_ROOT_DIR/vxworks
    ACE_ROOT=$ACE_ROOT_VW
    echo "Installing ACE/TAO for $OSTAG"
    echo "Wind Base is: $WIND_BASE"
    cd $ALMASW_ROOTDIR/$ALMASW_RELEASE/TAO/ACE_wrappers
    echo "running create_ace_build vxworks"
    bin/create_ace_build vxworks
    echo "done"
    echo ""

    echo "copying config.h and platform_macros.GNU"
    cp $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/$OSTAG/config.h $ACE_ROOT_VW/ace
    cp $CURR_DIR/../PRODUCTS/ACE+TAO_PATCHES/$OSTAG/platform_macros.GNU $ACE_ROOT_VW/include/makeinclude
    chmod oug+r $ACE_ROOT_VW/ace/config.h $ACE_ROOT_VW/include/makeinclude/platform_macros.GNU
    echo "done"
    echo ""

    echo "building ace"
    cd $ACE_ROOT_VW/ace ; make
    echo "done"
    echo ""
    echo "building tao"
    cd $ACE_ROOT_VW/TAO/tao ; make
    echo "done"
    echo ""

    echo "making links..."
    cd $ACE_ROOT_VW/bin
    ln -s ../../$LINK_DEST/bin/gperf gperf
    cd $ACE_ROOT_VW/TAO
    rm -rf TAO_IDL
    ln -s ../../$LINK_DEST/TAO/TAO_IDL .
    echo "done"
    echo ""

    echo "building orbsvcs"
    cd $ACE_ROOT_VW/TAO/orbsvcs/orbsvcs ; make
    echo "done"
    echo ""

    echo "Installation of ACE/TAO for $OSTAG finished"

fi


cd $CURR_DIR
echo ACE/TAO installation done
date

