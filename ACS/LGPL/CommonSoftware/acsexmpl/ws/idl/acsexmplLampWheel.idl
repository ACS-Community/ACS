#ifndef _LAMPWHEEL_IDL_
#define _LAMPWHEEL_IDL_

/*******************************************************************************
*    ALMA - Atacama Large Millimiter Array
*    (c) European Southern Observatory, 2002
*    Copyright by ESO (in the framework of the ALMA collaboration)
*    and Cosylab 2002, All rights reserved
*
*    This library is free software; you can redistribute it and/or
*    modify it under the terms of the GNU Lesser General Public
*    License as published by the Free Software Foundation; either
*    version 2.1 of the License, or (at your option) any later version.
*
*    This library is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*    Lesser General Public License for more details.
*
*    You should have received a copy of the GNU Lesser General Public
*    License along with this library; if not, write to the Free Software
*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
*
*
* "@(#) $Id: acsexmplLampWheel.idl,v 1.3 2004/11/29 16:45:04 acaproni Exp $"
*
* who       when      what
* --------  --------  ----------------------------------------------
* acaproni  20041124  Creation
*/

#include <baci.idl>

#pragma prefix "alma"

/** @file acsexmplLampWheel.idl
 *  LampWheel's IDL File
 */

module acsexmplLampWheel 
{
    /** @interface Lamp
     *  Interface LampWheel is a very simple interface which uses only 
     *  asynchronous methods.
     */
    interface LampWheel : ACS::CharacteristicComponent 
	{
	/** 
	 *  Rotate the lamp wheel asynchronously. That is, we are notified 
	 *  by the callback when the method really completes.
	 *  @param slot The number of the slot to put under the beam
	 *  @param cb callback when the lamp wheel is in position.
	 *  @param desc is used to negotiate timeouts between client and sever.
	 *  See the BACI specifications for more details.
	 *  @return void
	 *  @htmlonly
	 *  <br><hr>
	 *  @endhtmlonly
	 */
	void move(in short slot, in ACS::CBvoid cb, in ACS::CBDescIn desc);

	/** This property is the position of the lamp wheel.
	 */
	readonly attribute ACS::ROdouble position;

	/**
	 * This property is the number of available slots in the lamp wheel
	 */
	readonly attribute ACS::ROlong slots;

	/**
	 * This property is the description of the lamp wheel.
	 */
	readonly attribute ACS::ROstring desc;
	};
};

#endif
